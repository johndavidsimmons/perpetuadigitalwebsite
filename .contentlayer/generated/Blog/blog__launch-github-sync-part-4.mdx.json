{
  "title": "Syncing Adobe Launch/Tags with Github - Part 4: Building Launch libraries programmatically",
  "date": "2023-05-08T00:00:00.000Z",
  "tags": ["adobe launch", "adobe tags", "javascript", "github", "automation"],
  "draft": false,
  "summary": "How to use Github to build, sync, & deploy custom code directly to Adobe Launch/Tags - Part 4",
  "body": {
    "raw": "\n## So where exactly are we at?\n\n![step 3 aws diagram](https://images.ctfassets.net/on47yk52ubpi/5tFqSJp7eI2srx72geCELx/a822e81e9d968624fefe9b43faf3d50a/2d_launch_github_sync_diagram.png)\n\nIn this step, I am calling an AWS Lambda called _Build Launch Development Library_ which will take\nmy changed files from Github, modify their corresponding data elements, and build a Launch development library of the changes\n\n## Working with the Launch API, aka the Reactor API\n\nWhen making changes to Launch in the UI, almost every action you take is a call to the Reactor API. This is because Launch is completely API\ndriven and is actually I why I am able to do this project in the first place. When working programmatically with the API, you must recreate exactly what you\nwould do in the UI and there are more steps than you think. I ran into a couple road blocks due to skipping steps, usually around\nsetting relationships, but as long as you follow the docs and think logically about what you would be doing if you were working in the UI,\nit will all click eventually.\n\nSpeaking of the Launch API, depending on what you search for you'll get a couple things:\n\n- [https://developer.adobelaunch.com/api/](https://developer.adobelaunch.com/api/) - This is the old\n  documentation. It doesn't seems to be wrong, just a little dated.\n- [https://experienceleague.adobe.com/docs/experience-platform/tags/api/overview.html](https://experienceleague.adobe.com/docs/experience-platform/tags/api/overview.html)\n  This is the new documentation. Its a little more thorough and uses updated terms. I mostly used this one.\n\nNow its possible to use the Launch API without a library, but why put yourself through that?\n\n- **Python** - [https://github.com/pitchmuc/launchpy](https://github.com/pitchmuc/launchpy)\n- **Javscript/Nodejs** - [https://www.npmjs.com/package/@adobe/reactor-sdk](https://www.npmjs.com/package/@adobe/reactor-sdk)\n\nI ended up using the NodeJS SDK because its easier to deploy Javascript lambdas than trying to deal with Python packages.\nAdobe also has a nice authorization library on NPM for working with Experience Cloud APIs:\n\n- [https://www.npmjs.com/package/@adobe/jwt-auth](https://www.npmjs.com/package/@adobe/jwt-auth)\n\n## Steps to add a change to Launch library via the API\n\nSo I've been notified that a file change occurred in Github that I need to sync with Launch. I've pulled the latest version of that file and extracted it's contents.\nThe last thing to do is add those changes to a Launch library and build. The API follows more or less the same process as working in the UI.\n\nAssuming the changes needed apply to a single Launch property, here what my Launch lambda does once it receives the file contents from the previous lambda:\n\n1. [Initial setup, authenticate, etc.](https://github.com/adobe/reactor-sdk-javascript#usage)\n2. [Pull the existing data elements from Launch by Data element ID(s). Remember that data element IDs are part of the file contents on Github](https://github.com/adobe/reactor-sdk-javascript/blob/master/src/data-elements.js#L30)\n3. [Iterate data elements above, and apply changes needed. This creates a respective revision ID(s) for each data element.](https://github.com/adobe/reactor-sdk-javascript/blob/master/src/data-elements.js#L81)\n4. [Create a new development library using the truncated Github ref as a name](https://github.com/adobe/reactor-sdk-javascript/blob/master/src/libraries.js#L57)\n5. [Add data element revision IDs to newly created dev library](https://github.com/adobe/reactor-sdk-javascript/blob/master/src/libraries.js#L23)\n6. [Create a single use development environment](https://github.com/adobe/reactor-sdk-javascript/blob/master/src/environments.js#L18)\n7. [Add the development environment created above to my development library](https://github.com/adobe/reactor-sdk-javascript/blob/master/src/libraries.js#L250)\n8. [Build the development library](https://github.com/adobe/reactor-sdk-javascript/blob/master/src/builds.js#L13)\n\n## From Github to dev library\n\n![github ref](https://images.ctfassets.net/on47yk52ubpi/6wcyHHCOOtA2GCOMwaz0ND/cd258e3b4464103d5f5412fe77eae5f8/Screenshot_2023-05-01_at_3.26.53_PM.png)\n\n<figure>\n  <figcaption>File contents and Github commit ref</figcaption>\n</figure>\n\n![launch github library](https://images.ctfassets.net/on47yk52ubpi/1TviEV4TUUB3mz9urfmOVA/15fd3f13c81aba3827faab86acfc3c3e/Screenshot_2023-05-01_at_3.27.01_PM.png)\n\n<figure>\n  <figcaption>Ref used as library name</figcaption>\n</figure>\n\n![launch library contents](https://images.ctfassets.net/on47yk52ubpi/5Zi0zlcCYVUiZf2s8oCy25/faf5e84c0aba933924c5761f4b23954d/Screenshot_2023-05-01_at_3.27.31_PM.png)\n\n<figure>\n  <figcaption>Library contains the data element that corresponds to `test.js`</figcaption>\n</figure>\n\n![data element contents](https://images.ctfassets.net/on47yk52ubpi/1v9AJ1ybq5AtSydEoTu1rV/c439654563a4ca3270f71bcdc6f0d97b/Screenshot_2023-05-01_at_3.27.41_PM.png)\n\n<figure>\n  <figcaption>\n    I can't get all the proof that this is from the library into a screenshot, so just trust me here\n    :) Remember that a minified Launch library strips out comments\n  </figcaption>\n</figure>\n\n---\n\n## Launch Callbacks\n\nIf you've never heard of [Launch callbacks](https://experienceleague.adobe.com/docs/experience-platform/tags/api/endpoints/callbacks.html?lang=en) before, you probably aren't alone.\nThis somewhat obscure feature lets you tap into Launch UI events and do things based on them. A generic statement I know, but for example, if you wanted to, say, send\na Slack message to a room when a new development environment is created, Launch callbacks would be how you set that up. There are 2 steps required to building a Launch\ncallback action:\n\n- Build an API for the callback to post to. This is similar to the Github Push webhook API route I made before. Launch callbacks do _nothing_ on their own, they are just\n  notifications similar to the Github push webhook from my first post. A Launch callback needs an API to post to. Its that endpoint that _actually_ does the thing you want to do.\n- Update your property callback rules to post to that API when the thing you are wanting to track occurs.\n\nUsing the Slack message example above, I would build an API endpoint that received POST data from Launch and sends a message to Slack. I would then\nuse the [create a callback endpoint](https://experienceleague.adobe.com/docs/experience-platform/tags/api/endpoints/callbacks.html?lang=en#create)\nto add the API route I just created to the callback rules of my property. There some more details once you get into it, but that is the basic idea.\n\n## How I am using Launch callbacks\n\nLogic follows that if I am pushing to my `main` Github branch then I would like that change reflected in prod immediately.\nI am using Launch callbacks to automatically promote libraries from Development to Staging, and from Staging to Production.\nThat is precisely what is happening in this step of the diagram:\n\n![launch callback diagram](https://images.ctfassets.net/on47yk52ubpi/5ptagJs46vXfuanec6g6wU/d939d98b5959e3826a1b643b39f3b2e5/2d_launch_github_sync_diagram_prod.png)\n\n<figure>\n  <figcaption>Launch callback functions take care of auto publishing</figcaption>\n</figure>\n\nWhen any development library gets successfully built in my property, Launch will notify my callback API endpoint. If that library has a name that starts with `Github@`, the endpoint\nwill call the Launch API and automatically promote that library to Staging and build it. Subsequently, when the Staging library is successfully built, the process repeats itself.\nThe endpoint checks if the library name starts with `Github@`, and if it does, the endpoint will automatically promote and publish that library.\n\nTruncated a bit for brevity, the endpoint looks something like this:\n\n```javascript\n// https://12345678.execute-api.amazon-region-here.amazonaws.com/launch-endpoint\",\napp.post('/launch-endpoint', async (req, res) => {\n  try {\n    // ...\n    // ...\n    // after checking library name\n    if (libraryStage == 'development' && buildStatus == 'succeeded') {\n      await promoteLibrary(libraryId)\n      await buildStaging(propertyId, libraryId)\n    } else if (libraryStage == 'staging' && buildStatus == 'succeeded') {\n      await approveStaging(libraryId)\n      await setProdRelationship(libraryId, prodEnvId)\n      await publishLibrary(libraryId)\n    }\n    res.json({ message: 'library updated' })\n  } catch (e) {\n    res.json({ error: e })\n  }\n})\n```\n\nLooking at the Launch Callbacks for my property using the [List Callbacks](https://experienceleague.adobe.com/docs/experience-platform/tags/api/endpoints/callbacks.html?lang=en#list) method\nwill look something like this:\n\n```javascript\n  \"data\": [\n    {\n      \"id\": \"CB123456789\",\n      \"type\": \"callbacks\",\n      \"attributes\": {\n        \"created_at\": \"2023-05-06T20:52:43.507Z\",\n        \"subscriptions\": [\n          \"build.updated\"\n        ],\n        \"updated_at\": \"2023-05-06T20:52:43.507Z\",\n        \"url\": \"https://12345678.execute-api.amazon-region-here.amazonaws.com/launch-endpoint\",\n        \"created_by_email\": \"mytechacct@techacct.adobe.com\",\n        \"created_by_display_name\": \"mytechacct@techacct.adobe.com\",\n        \"updated_by_email\": \"mytechacct@techacct.adobe.com\",\n        \"updated_by_display_name\": \"mytechacct@techacct.adobe.com\"\n      }\n    }]\n    // obj truncated...\n    //  ...\n    //  ...\n```\n\nI can see that my property has a single callback that is subscribed to the `build.updated` event. Any time a build is updated (i.e. build successfully, built unsuccessfully, etc),\nLaunch will make a request to the API route I created above and the build and promote logic will run. If the build change doesn't meet the criteria for automatic promotion, then\nnothing happens.\n\n## In Action\n\nIts a lot more interesting to see this thing in action than to read about it!\n\n<ReactPlayer url=\"https://www.youtube.com/watch?v=loKG4xsnrkw\" />\n",
    "code": "var Component=(()=>{var h=Object.create;var i=Object.defineProperty;var d=Object.getOwnPropertyDescriptor;var p=Object.getOwnPropertyNames;var m=Object.getPrototypeOf,u=Object.prototype.hasOwnProperty;var b=(n,t)=>()=>(t||n((t={exports:{}}).exports,t),t.exports),k=(n,t)=>{for(var s in t)i(n,s,{get:t[s],enumerable:!0})},l=(n,t,s,a)=>{if(t&&typeof t==\"object\"||typeof t==\"function\")for(let c of p(t))!u.call(n,c)&&c!==s&&i(n,c,{get:()=>t[c],enumerable:!(a=d(t,c))||a.enumerable});return n};var g=(n,t,s)=>(s=n!=null?h(m(n)):{},l(t||!n||!n.__esModule?i(s,\"default\",{value:n,enumerable:!0}):s,n)),N=n=>l(i({},\"__esModule\",{value:!0}),n);var r=b((_,o)=>{o.exports=_jsx_runtime});var v={};k(v,{default:()=>w,frontmatter:()=>y});var e=g(r()),y={title:\"Syncing Adobe Launch/Tags with Github - Part 4: Building Launch libraries programmatically\",date:\"2023-05-08\",tags:[\"adobe launch\",\"adobe tags\",\"javascript\",\"github\",\"automation\"],draft:!1,summary:\"How to use Github to build, sync, & deploy custom code directly to Adobe Launch/Tags - Part 4\"};function f(n={}){let{wrapper:t}=n.components||{};return t?(0,e.jsx)(t,Object.assign({},n,{children:(0,e.jsx)(s,{})})):s();function s(){let a=Object.assign({h2:\"h2\",a:\"a\",span:\"span\",p:\"p\",img:\"img\",em:\"em\",ul:\"ul\",li:\"li\",strong:\"strong\",ol:\"ol\",code:\"code\",hr:\"hr\",pre:\"pre\"},n.components),{ReactPlayer:c}=a;return c||I(\"ReactPlayer\",!0,\"177:1-177:66\"),(0,e.jsxs)(e.Fragment,{children:[(0,e.jsxs)(a.h2,{id:\"so-where-exactly-are-we-at\",children:[(0,e.jsx)(a.a,{href:\"#so-where-exactly-are-we-at\",\"aria-hidden\":\"true\",tabIndex:\"-1\",children:(0,e.jsx)(a.span,{className:\"icon icon-link\"})}),\"So where exactly are we at?\"]}),(0,e.jsx)(a.p,{children:(0,e.jsx)(a.img,{alt:\"step 3 aws diagram\",src:\"https://images.ctfassets.net/on47yk52ubpi/5tFqSJp7eI2srx72geCELx/a822e81e9d968624fefe9b43faf3d50a/2d_launch_github_sync_diagram.png\"})}),(0,e.jsxs)(a.p,{children:[\"In this step, I am calling an AWS Lambda called \",(0,e.jsx)(a.em,{children:\"Build Launch Development Library\"}),\" which will take my changed files from Github, modify their corresponding data elements, and build a Launch development library of the changes\"]}),(0,e.jsxs)(a.h2,{id:\"working-with-the-launch-api-aka-the-reactor-api\",children:[(0,e.jsx)(a.a,{href:\"#working-with-the-launch-api-aka-the-reactor-api\",\"aria-hidden\":\"true\",tabIndex:\"-1\",children:(0,e.jsx)(a.span,{className:\"icon icon-link\"})}),\"Working with the Launch API, aka the Reactor API\"]}),(0,e.jsx)(a.p,{children:\"When making changes to Launch in the UI, almost every action you take is a call to the Reactor API. This is because Launch is completely API driven and is actually I why I am able to do this project in the first place. When working programmatically with the API, you must recreate exactly what you would do in the UI and there are more steps than you think. I ran into a couple road blocks due to skipping steps, usually around setting relationships, but as long as you follow the docs and think logically about what you would be doing if you were working in the UI, it will all click eventually.\"}),(0,e.jsx)(a.p,{children:\"Speaking of the Launch API, depending on what you search for you'll get a couple things:\"}),(0,e.jsxs)(a.ul,{children:[(0,e.jsxs)(a.li,{children:[(0,e.jsx)(a.a,{href:\"https://developer.adobelaunch.com/api/\",children:\"https://developer.adobelaunch.com/api/\"}),\" - This is the old documentation. It doesn't seems to be wrong, just a little dated.\"]}),(0,e.jsxs)(a.li,{children:[(0,e.jsx)(a.a,{href:\"https://experienceleague.adobe.com/docs/experience-platform/tags/api/overview.html\",children:\"https://experienceleague.adobe.com/docs/experience-platform/tags/api/overview.html\"}),\" This is the new documentation. Its a little more thorough and uses updated terms. I mostly used this one.\"]})]}),(0,e.jsx)(a.p,{children:\"Now its possible to use the Launch API without a library, but why put yourself through that?\"}),(0,e.jsxs)(a.ul,{children:[(0,e.jsxs)(a.li,{children:[(0,e.jsx)(a.strong,{children:\"Python\"}),\" - \",(0,e.jsx)(a.a,{href:\"https://github.com/pitchmuc/launchpy\",children:\"https://github.com/pitchmuc/launchpy\"})]}),(0,e.jsxs)(a.li,{children:[(0,e.jsx)(a.strong,{children:\"Javscript/Nodejs\"}),\" - \",(0,e.jsx)(a.a,{href:\"https://www.npmjs.com/package/@adobe/reactor-sdk\",children:\"https://www.npmjs.com/package/@adobe/reactor-sdk\"})]})]}),(0,e.jsx)(a.p,{children:\"I ended up using the NodeJS SDK because its easier to deploy Javascript lambdas than trying to deal with Python packages. Adobe also has a nice authorization library on NPM for working with Experience Cloud APIs:\"}),(0,e.jsx)(a.ul,{children:(0,e.jsx)(a.li,{children:(0,e.jsx)(a.a,{href:\"https://www.npmjs.com/package/@adobe/jwt-auth\",children:\"https://www.npmjs.com/package/@adobe/jwt-auth\"})})}),(0,e.jsxs)(a.h2,{id:\"steps-to-add-a-change-to-launch-library-via-the-api\",children:[(0,e.jsx)(a.a,{href:\"#steps-to-add-a-change-to-launch-library-via-the-api\",\"aria-hidden\":\"true\",tabIndex:\"-1\",children:(0,e.jsx)(a.span,{className:\"icon icon-link\"})}),\"Steps to add a change to Launch library via the API\"]}),(0,e.jsx)(a.p,{children:\"So I've been notified that a file change occurred in Github that I need to sync with Launch. I've pulled the latest version of that file and extracted it's contents. The last thing to do is add those changes to a Launch library and build. The API follows more or less the same process as working in the UI.\"}),(0,e.jsx)(a.p,{children:\"Assuming the changes needed apply to a single Launch property, here what my Launch lambda does once it receives the file contents from the previous lambda:\"}),(0,e.jsxs)(a.ol,{children:[(0,e.jsx)(a.li,{children:(0,e.jsx)(a.a,{href:\"https://github.com/adobe/reactor-sdk-javascript#usage\",children:\"Initial setup, authenticate, etc.\"})}),(0,e.jsx)(a.li,{children:(0,e.jsx)(a.a,{href:\"https://github.com/adobe/reactor-sdk-javascript/blob/master/src/data-elements.js#L30\",children:\"Pull the existing data elements from Launch by Data element ID(s). Remember that data element IDs are part of the file contents on Github\"})}),(0,e.jsx)(a.li,{children:(0,e.jsx)(a.a,{href:\"https://github.com/adobe/reactor-sdk-javascript/blob/master/src/data-elements.js#L81\",children:\"Iterate data elements above, and apply changes needed. This creates a respective revision ID(s) for each data element.\"})}),(0,e.jsx)(a.li,{children:(0,e.jsx)(a.a,{href:\"https://github.com/adobe/reactor-sdk-javascript/blob/master/src/libraries.js#L57\",children:\"Create a new development library using the truncated Github ref as a name\"})}),(0,e.jsx)(a.li,{children:(0,e.jsx)(a.a,{href:\"https://github.com/adobe/reactor-sdk-javascript/blob/master/src/libraries.js#L23\",children:\"Add data element revision IDs to newly created dev library\"})}),(0,e.jsx)(a.li,{children:(0,e.jsx)(a.a,{href:\"https://github.com/adobe/reactor-sdk-javascript/blob/master/src/environments.js#L18\",children:\"Create a single use development environment\"})}),(0,e.jsx)(a.li,{children:(0,e.jsx)(a.a,{href:\"https://github.com/adobe/reactor-sdk-javascript/blob/master/src/libraries.js#L250\",children:\"Add the development environment created above to my development library\"})}),(0,e.jsx)(a.li,{children:(0,e.jsx)(a.a,{href:\"https://github.com/adobe/reactor-sdk-javascript/blob/master/src/builds.js#L13\",children:\"Build the development library\"})})]}),(0,e.jsxs)(a.h2,{id:\"from-github-to-dev-library\",children:[(0,e.jsx)(a.a,{href:\"#from-github-to-dev-library\",\"aria-hidden\":\"true\",tabIndex:\"-1\",children:(0,e.jsx)(a.span,{className:\"icon icon-link\"})}),\"From Github to dev library\"]}),(0,e.jsx)(a.p,{children:(0,e.jsx)(a.img,{alt:\"github ref\",src:\"https://images.ctfassets.net/on47yk52ubpi/6wcyHHCOOtA2GCOMwaz0ND/cd258e3b4464103d5f5412fe77eae5f8/Screenshot_2023-05-01_at_3.26.53_PM.png\"})}),(0,e.jsx)(\"figure\",{children:(0,e.jsx)(\"figcaption\",{children:\"File contents and Github commit ref\"})}),(0,e.jsx)(a.p,{children:(0,e.jsx)(a.img,{alt:\"launch github library\",src:\"https://images.ctfassets.net/on47yk52ubpi/1TviEV4TUUB3mz9urfmOVA/15fd3f13c81aba3827faab86acfc3c3e/Screenshot_2023-05-01_at_3.27.01_PM.png\"})}),(0,e.jsx)(\"figure\",{children:(0,e.jsx)(\"figcaption\",{children:\"Ref used as library name\"})}),(0,e.jsx)(a.p,{children:(0,e.jsx)(a.img,{alt:\"launch library contents\",src:\"https://images.ctfassets.net/on47yk52ubpi/5Zi0zlcCYVUiZf2s8oCy25/faf5e84c0aba933924c5761f4b23954d/Screenshot_2023-05-01_at_3.27.31_PM.png\"})}),(0,e.jsx)(\"figure\",{children:(0,e.jsxs)(\"figcaption\",{children:[\"Library contains the data element that corresponds to \",(0,e.jsx)(a.code,{children:\"test.js\"})]})}),(0,e.jsx)(a.p,{children:(0,e.jsx)(a.img,{alt:\"data element contents\",src:\"https://images.ctfassets.net/on47yk52ubpi/1v9AJ1ybq5AtSydEoTu1rV/c439654563a4ca3270f71bcdc6f0d97b/Screenshot_2023-05-01_at_3.27.41_PM.png\"})}),(0,e.jsx)(\"figure\",{children:(0,e.jsx)(\"figcaption\",{children:(0,e.jsx)(a.p,{children:\"I can't get all the proof that this is from the library into a screenshot, so just trust me here :) Remember that a minified Launch library strips out comments\"})})}),(0,e.jsx)(a.hr,{}),(0,e.jsxs)(a.h2,{id:\"launch-callbacks\",children:[(0,e.jsx)(a.a,{href:\"#launch-callbacks\",\"aria-hidden\":\"true\",tabIndex:\"-1\",children:(0,e.jsx)(a.span,{className:\"icon icon-link\"})}),\"Launch Callbacks\"]}),(0,e.jsxs)(a.p,{children:[\"If you've never heard of \",(0,e.jsx)(a.a,{href:\"https://experienceleague.adobe.com/docs/experience-platform/tags/api/endpoints/callbacks.html?lang=en\",children:\"Launch callbacks\"}),\" before, you probably aren't alone. This somewhat obscure feature lets you tap into Launch UI events and do things based on them. A generic statement I know, but for example, if you wanted to, say, send a Slack message to a room when a new development environment is created, Launch callbacks would be how you set that up. There are 2 steps required to building a Launch callback action:\"]}),(0,e.jsxs)(a.ul,{children:[(0,e.jsxs)(a.li,{children:[\"Build an API for the callback to post to. This is similar to the Github Push webhook API route I made before. Launch callbacks do \",(0,e.jsx)(a.em,{children:\"nothing\"}),\" on their own, they are just notifications similar to the Github push webhook from my first post. A Launch callback needs an API to post to. Its that endpoint that \",(0,e.jsx)(a.em,{children:\"actually\"}),\" does the thing you want to do.\"]}),(0,e.jsx)(a.li,{children:\"Update your property callback rules to post to that API when the thing you are wanting to track occurs.\"})]}),(0,e.jsxs)(a.p,{children:[\"Using the Slack message example above, I would build an API endpoint that received POST data from Launch and sends a message to Slack. I would then use the \",(0,e.jsx)(a.a,{href:\"https://experienceleague.adobe.com/docs/experience-platform/tags/api/endpoints/callbacks.html?lang=en#create\",children:\"create a callback endpoint\"}),\" to add the API route I just created to the callback rules of my property. There some more details once you get into it, but that is the basic idea.\"]}),(0,e.jsxs)(a.h2,{id:\"how-i-am-using-launch-callbacks\",children:[(0,e.jsx)(a.a,{href:\"#how-i-am-using-launch-callbacks\",\"aria-hidden\":\"true\",tabIndex:\"-1\",children:(0,e.jsx)(a.span,{className:\"icon icon-link\"})}),\"How I am using Launch callbacks\"]}),(0,e.jsxs)(a.p,{children:[\"Logic follows that if I am pushing to my \",(0,e.jsx)(a.code,{children:\"main\"}),\" Github branch then I would like that change reflected in prod immediately. I am using Launch callbacks to automatically promote libraries from Development to Staging, and from Staging to Production. That is precisely what is happening in this step of the diagram:\"]}),(0,e.jsx)(a.p,{children:(0,e.jsx)(a.img,{alt:\"launch callback diagram\",src:\"https://images.ctfassets.net/on47yk52ubpi/5ptagJs46vXfuanec6g6wU/d939d98b5959e3826a1b643b39f3b2e5/2d_launch_github_sync_diagram_prod.png\"})}),(0,e.jsx)(\"figure\",{children:(0,e.jsx)(\"figcaption\",{children:\"Launch callback functions take care of auto publishing\"})}),(0,e.jsxs)(a.p,{children:[\"When any development library gets successfully built in my property, Launch will notify my callback API endpoint. If that library has a name that starts with \",(0,e.jsx)(a.code,{children:\"Github@\"}),\", the endpoint will call the Launch API and automatically promote that library to Staging and build it. Subsequently, when the Staging library is successfully built, the process repeats itself. The endpoint checks if the library name starts with \",(0,e.jsx)(a.code,{children:\"Github@\"}),\", and if it does, the endpoint will automatically promote and publish that library.\"]}),(0,e.jsx)(a.p,{children:\"Truncated a bit for brevity, the endpoint looks something like this:\"}),(0,e.jsx)(a.pre,{className:\"language-javascript\",children:(0,e.jsxs)(a.code,{className:\"language-javascript code-highlight\",children:[(0,e.jsxs)(a.span,{className:\"code-line\",children:[(0,e.jsx)(a.span,{className:\"token comment\",children:'// https://12345678.execute-api.amazon-region-here.amazonaws.com/launch-endpoint\",'}),`\n`]}),(0,e.jsxs)(a.span,{className:\"code-line\",children:[\"app\",(0,e.jsx)(a.span,{className:\"token punctuation\",children:\".\"}),(0,e.jsx)(a.span,{className:\"token function method property-access\",children:\"post\"}),(0,e.jsx)(a.span,{className:\"token punctuation\",children:\"(\"}),(0,e.jsx)(a.span,{className:\"token string\",children:\"'/launch-endpoint'\"}),(0,e.jsx)(a.span,{className:\"token punctuation\",children:\",\"}),\" \",(0,e.jsx)(a.span,{className:\"token keyword\",children:\"async\"}),\" \",(0,e.jsx)(a.span,{className:\"token punctuation\",children:\"(\"}),(0,e.jsxs)(a.span,{className:\"token parameter\",children:[\"req\",(0,e.jsx)(a.span,{className:\"token punctuation\",children:\",\"}),\" res\"]}),(0,e.jsx)(a.span,{className:\"token punctuation\",children:\")\"}),\" \",(0,e.jsx)(a.span,{className:\"token operator arrow\",children:\"=>\"}),\" \",(0,e.jsx)(a.span,{className:\"token punctuation\",children:\"{\"}),`\n`]}),(0,e.jsxs)(a.span,{className:\"code-line\",children:[\"  \",(0,e.jsx)(a.span,{className:\"token keyword control-flow\",children:\"try\"}),\" \",(0,e.jsx)(a.span,{className:\"token punctuation\",children:\"{\"}),`\n`]}),(0,e.jsxs)(a.span,{className:\"code-line\",children:[\"    \",(0,e.jsx)(a.span,{className:\"token comment\",children:\"// ...\"}),`\n`]}),(0,e.jsxs)(a.span,{className:\"code-line\",children:[\"    \",(0,e.jsx)(a.span,{className:\"token comment\",children:\"// ...\"}),`\n`]}),(0,e.jsxs)(a.span,{className:\"code-line\",children:[\"    \",(0,e.jsx)(a.span,{className:\"token comment\",children:\"// after checking library name\"}),`\n`]}),(0,e.jsxs)(a.span,{className:\"code-line\",children:[\"    \",(0,e.jsx)(a.span,{className:\"token keyword control-flow\",children:\"if\"}),\" \",(0,e.jsx)(a.span,{className:\"token punctuation\",children:\"(\"}),\"libraryStage \",(0,e.jsx)(a.span,{className:\"token operator\",children:\"==\"}),\" \",(0,e.jsx)(a.span,{className:\"token string\",children:\"'development'\"}),\" \",(0,e.jsx)(a.span,{className:\"token operator\",children:\"&&\"}),\" buildStatus \",(0,e.jsx)(a.span,{className:\"token operator\",children:\"==\"}),\" \",(0,e.jsx)(a.span,{className:\"token string\",children:\"'succeeded'\"}),(0,e.jsx)(a.span,{className:\"token punctuation\",children:\")\"}),\" \",(0,e.jsx)(a.span,{className:\"token punctuation\",children:\"{\"}),`\n`]}),(0,e.jsxs)(a.span,{className:\"code-line\",children:[\"      \",(0,e.jsx)(a.span,{className:\"token keyword control-flow\",children:\"await\"}),\" \",(0,e.jsx)(a.span,{className:\"token function\",children:\"promoteLibrary\"}),(0,e.jsx)(a.span,{className:\"token punctuation\",children:\"(\"}),\"libraryId\",(0,e.jsx)(a.span,{className:\"token punctuation\",children:\")\"}),`\n`]}),(0,e.jsxs)(a.span,{className:\"code-line\",children:[\"      \",(0,e.jsx)(a.span,{className:\"token keyword control-flow\",children:\"await\"}),\" \",(0,e.jsx)(a.span,{className:\"token function\",children:\"buildStaging\"}),(0,e.jsx)(a.span,{className:\"token punctuation\",children:\"(\"}),\"propertyId\",(0,e.jsx)(a.span,{className:\"token punctuation\",children:\",\"}),\" libraryId\",(0,e.jsx)(a.span,{className:\"token punctuation\",children:\")\"}),`\n`]}),(0,e.jsxs)(a.span,{className:\"code-line\",children:[\"    \",(0,e.jsx)(a.span,{className:\"token punctuation\",children:\"}\"}),\" \",(0,e.jsx)(a.span,{className:\"token keyword control-flow\",children:\"else\"}),\" \",(0,e.jsx)(a.span,{className:\"token keyword control-flow\",children:\"if\"}),\" \",(0,e.jsx)(a.span,{className:\"token punctuation\",children:\"(\"}),\"libraryStage \",(0,e.jsx)(a.span,{className:\"token operator\",children:\"==\"}),\" \",(0,e.jsx)(a.span,{className:\"token string\",children:\"'staging'\"}),\" \",(0,e.jsx)(a.span,{className:\"token operator\",children:\"&&\"}),\" buildStatus \",(0,e.jsx)(a.span,{className:\"token operator\",children:\"==\"}),\" \",(0,e.jsx)(a.span,{className:\"token string\",children:\"'succeeded'\"}),(0,e.jsx)(a.span,{className:\"token punctuation\",children:\")\"}),\" \",(0,e.jsx)(a.span,{className:\"token punctuation\",children:\"{\"}),`\n`]}),(0,e.jsxs)(a.span,{className:\"code-line\",children:[\"      \",(0,e.jsx)(a.span,{className:\"token keyword control-flow\",children:\"await\"}),\" \",(0,e.jsx)(a.span,{className:\"token function\",children:\"approveStaging\"}),(0,e.jsx)(a.span,{className:\"token punctuation\",children:\"(\"}),\"libraryId\",(0,e.jsx)(a.span,{className:\"token punctuation\",children:\")\"}),`\n`]}),(0,e.jsxs)(a.span,{className:\"code-line\",children:[\"      \",(0,e.jsx)(a.span,{className:\"token keyword control-flow\",children:\"await\"}),\" \",(0,e.jsx)(a.span,{className:\"token function\",children:\"setProdRelationship\"}),(0,e.jsx)(a.span,{className:\"token punctuation\",children:\"(\"}),\"libraryId\",(0,e.jsx)(a.span,{className:\"token punctuation\",children:\",\"}),\" prodEnvId\",(0,e.jsx)(a.span,{className:\"token punctuation\",children:\")\"}),`\n`]}),(0,e.jsxs)(a.span,{className:\"code-line\",children:[\"      \",(0,e.jsx)(a.span,{className:\"token keyword control-flow\",children:\"await\"}),\" \",(0,e.jsx)(a.span,{className:\"token function\",children:\"publishLibrary\"}),(0,e.jsx)(a.span,{className:\"token punctuation\",children:\"(\"}),\"libraryId\",(0,e.jsx)(a.span,{className:\"token punctuation\",children:\")\"}),`\n`]}),(0,e.jsxs)(a.span,{className:\"code-line\",children:[\"    \",(0,e.jsx)(a.span,{className:\"token punctuation\",children:\"}\"}),`\n`]}),(0,e.jsxs)(a.span,{className:\"code-line\",children:[\"    res\",(0,e.jsx)(a.span,{className:\"token punctuation\",children:\".\"}),(0,e.jsx)(a.span,{className:\"token function method property-access\",children:\"json\"}),(0,e.jsx)(a.span,{className:\"token punctuation\",children:\"(\"}),(0,e.jsx)(a.span,{className:\"token punctuation\",children:\"{\"}),\" message\",(0,e.jsx)(a.span,{className:\"token operator\",children:\":\"}),\" \",(0,e.jsx)(a.span,{className:\"token string\",children:\"'library updated'\"}),\" \",(0,e.jsx)(a.span,{className:\"token punctuation\",children:\"}\"}),(0,e.jsx)(a.span,{className:\"token punctuation\",children:\")\"}),`\n`]}),(0,e.jsxs)(a.span,{className:\"code-line\",children:[\"  \",(0,e.jsx)(a.span,{className:\"token punctuation\",children:\"}\"}),\" \",(0,e.jsx)(a.span,{className:\"token keyword control-flow\",children:\"catch\"}),\" \",(0,e.jsx)(a.span,{className:\"token punctuation\",children:\"(\"}),\"e\",(0,e.jsx)(a.span,{className:\"token punctuation\",children:\")\"}),\" \",(0,e.jsx)(a.span,{className:\"token punctuation\",children:\"{\"}),`\n`]}),(0,e.jsxs)(a.span,{className:\"code-line\",children:[\"    res\",(0,e.jsx)(a.span,{className:\"token punctuation\",children:\".\"}),(0,e.jsx)(a.span,{className:\"token function method property-access\",children:\"json\"}),(0,e.jsx)(a.span,{className:\"token punctuation\",children:\"(\"}),(0,e.jsx)(a.span,{className:\"token punctuation\",children:\"{\"}),\" error\",(0,e.jsx)(a.span,{className:\"token operator\",children:\":\"}),\" e \",(0,e.jsx)(a.span,{className:\"token punctuation\",children:\"}\"}),(0,e.jsx)(a.span,{className:\"token punctuation\",children:\")\"}),`\n`]}),(0,e.jsxs)(a.span,{className:\"code-line\",children:[\"  \",(0,e.jsx)(a.span,{className:\"token punctuation\",children:\"}\"}),`\n`]}),(0,e.jsxs)(a.span,{className:\"code-line\",children:[(0,e.jsx)(a.span,{className:\"token punctuation\",children:\"}\"}),(0,e.jsx)(a.span,{className:\"token punctuation\",children:\")\"}),`\n`]})]})}),(0,e.jsxs)(a.p,{children:[\"Looking at the Launch Callbacks for my property using the \",(0,e.jsx)(a.a,{href:\"https://experienceleague.adobe.com/docs/experience-platform/tags/api/endpoints/callbacks.html?lang=en#list\",children:\"List Callbacks\"}),\" method will look something like this:\"]}),(0,e.jsx)(a.pre,{className:\"language-javascript\",children:(0,e.jsxs)(a.code,{className:\"language-javascript code-highlight\",children:[(0,e.jsxs)(a.span,{className:\"code-line\",children:[\"  \",(0,e.jsx)(a.span,{className:\"token string\",children:'\"data\"'}),(0,e.jsx)(a.span,{className:\"token operator\",children:\":\"}),\" \",(0,e.jsx)(a.span,{className:\"token punctuation\",children:\"[\"}),`\n`]}),(0,e.jsxs)(a.span,{className:\"code-line\",children:[\"    \",(0,e.jsx)(a.span,{className:\"token punctuation\",children:\"{\"}),`\n`]}),(0,e.jsxs)(a.span,{className:\"code-line\",children:[\"      \",(0,e.jsx)(a.span,{className:\"token string\",children:'\"id\"'}),(0,e.jsx)(a.span,{className:\"token operator\",children:\":\"}),\" \",(0,e.jsx)(a.span,{className:\"token string\",children:'\"CB123456789\"'}),(0,e.jsx)(a.span,{className:\"token punctuation\",children:\",\"}),`\n`]}),(0,e.jsxs)(a.span,{className:\"code-line\",children:[\"      \",(0,e.jsx)(a.span,{className:\"token string\",children:'\"type\"'}),(0,e.jsx)(a.span,{className:\"token operator\",children:\":\"}),\" \",(0,e.jsx)(a.span,{className:\"token string\",children:'\"callbacks\"'}),(0,e.jsx)(a.span,{className:\"token punctuation\",children:\",\"}),`\n`]}),(0,e.jsxs)(a.span,{className:\"code-line\",children:[\"      \",(0,e.jsx)(a.span,{className:\"token string\",children:'\"attributes\"'}),(0,e.jsx)(a.span,{className:\"token operator\",children:\":\"}),\" \",(0,e.jsx)(a.span,{className:\"token punctuation\",children:\"{\"}),`\n`]}),(0,e.jsxs)(a.span,{className:\"code-line\",children:[\"        \",(0,e.jsx)(a.span,{className:\"token string\",children:'\"created_at\"'}),(0,e.jsx)(a.span,{className:\"token operator\",children:\":\"}),\" \",(0,e.jsx)(a.span,{className:\"token string\",children:'\"2023-05-06T20:52:43.507Z\"'}),(0,e.jsx)(a.span,{className:\"token punctuation\",children:\",\"}),`\n`]}),(0,e.jsxs)(a.span,{className:\"code-line\",children:[\"        \",(0,e.jsx)(a.span,{className:\"token string\",children:'\"subscriptions\"'}),(0,e.jsx)(a.span,{className:\"token operator\",children:\":\"}),\" \",(0,e.jsx)(a.span,{className:\"token punctuation\",children:\"[\"}),`\n`]}),(0,e.jsxs)(a.span,{className:\"code-line\",children:[\"          \",(0,e.jsx)(a.span,{className:\"token string\",children:'\"build.updated\"'}),`\n`]}),(0,e.jsxs)(a.span,{className:\"code-line\",children:[\"        \",(0,e.jsx)(a.span,{className:\"token punctuation\",children:\"]\"}),(0,e.jsx)(a.span,{className:\"token punctuation\",children:\",\"}),`\n`]}),(0,e.jsxs)(a.span,{className:\"code-line\",children:[\"        \",(0,e.jsx)(a.span,{className:\"token string\",children:'\"updated_at\"'}),(0,e.jsx)(a.span,{className:\"token operator\",children:\":\"}),\" \",(0,e.jsx)(a.span,{className:\"token string\",children:'\"2023-05-06T20:52:43.507Z\"'}),(0,e.jsx)(a.span,{className:\"token punctuation\",children:\",\"}),`\n`]}),(0,e.jsxs)(a.span,{className:\"code-line\",children:[\"        \",(0,e.jsx)(a.span,{className:\"token string\",children:'\"url\"'}),(0,e.jsx)(a.span,{className:\"token operator\",children:\":\"}),\" \",(0,e.jsx)(a.span,{className:\"token string\",children:'\"https://12345678.execute-api.amazon-region-here.amazonaws.com/launch-endpoint\"'}),(0,e.jsx)(a.span,{className:\"token punctuation\",children:\",\"}),`\n`]}),(0,e.jsxs)(a.span,{className:\"code-line\",children:[\"        \",(0,e.jsx)(a.span,{className:\"token string\",children:'\"created_by_email\"'}),(0,e.jsx)(a.span,{className:\"token operator\",children:\":\"}),\" \",(0,e.jsx)(a.span,{className:\"token string\",children:'\"mytechacct@techacct.adobe.com\"'}),(0,e.jsx)(a.span,{className:\"token punctuation\",children:\",\"}),`\n`]}),(0,e.jsxs)(a.span,{className:\"code-line\",children:[\"        \",(0,e.jsx)(a.span,{className:\"token string\",children:'\"created_by_display_name\"'}),(0,e.jsx)(a.span,{className:\"token operator\",children:\":\"}),\" \",(0,e.jsx)(a.span,{className:\"token string\",children:'\"mytechacct@techacct.adobe.com\"'}),(0,e.jsx)(a.span,{className:\"token punctuation\",children:\",\"}),`\n`]}),(0,e.jsxs)(a.span,{className:\"code-line\",children:[\"        \",(0,e.jsx)(a.span,{className:\"token string\",children:'\"updated_by_email\"'}),(0,e.jsx)(a.span,{className:\"token operator\",children:\":\"}),\" \",(0,e.jsx)(a.span,{className:\"token string\",children:'\"mytechacct@techacct.adobe.com\"'}),(0,e.jsx)(a.span,{className:\"token punctuation\",children:\",\"}),`\n`]}),(0,e.jsxs)(a.span,{className:\"code-line\",children:[\"        \",(0,e.jsx)(a.span,{className:\"token string\",children:'\"updated_by_display_name\"'}),(0,e.jsx)(a.span,{className:\"token operator\",children:\":\"}),\" \",(0,e.jsx)(a.span,{className:\"token string\",children:'\"mytechacct@techacct.adobe.com\"'}),`\n`]}),(0,e.jsxs)(a.span,{className:\"code-line\",children:[\"      \",(0,e.jsx)(a.span,{className:\"token punctuation\",children:\"}\"}),`\n`]}),(0,e.jsxs)(a.span,{className:\"code-line\",children:[\"    \",(0,e.jsx)(a.span,{className:\"token punctuation\",children:\"}\"}),(0,e.jsx)(a.span,{className:\"token punctuation\",children:\"]\"}),`\n`]}),(0,e.jsxs)(a.span,{className:\"code-line\",children:[\"    \",(0,e.jsx)(a.span,{className:\"token comment\",children:\"// obj truncated...\"}),`\n`]}),(0,e.jsxs)(a.span,{className:\"code-line\",children:[\"    \",(0,e.jsx)(a.span,{className:\"token comment\",children:\"//  ...\"}),`\n`]}),(0,e.jsxs)(a.span,{className:\"code-line\",children:[\"    \",(0,e.jsx)(a.span,{className:\"token comment\",children:\"//  ...\"}),`\n`]})]})}),(0,e.jsxs)(a.p,{children:[\"I can see that my property has a single callback that is subscribed to the \",(0,e.jsx)(a.code,{children:\"build.updated\"}),\" event. Any time a build is updated (i.e. build successfully, built unsuccessfully, etc), Launch will make a request to the API route I created above and the build and promote logic will run. If the build change doesn't meet the criteria for automatic promotion, then nothing happens.\"]}),(0,e.jsxs)(a.h2,{id:\"in-action\",children:[(0,e.jsx)(a.a,{href:\"#in-action\",\"aria-hidden\":\"true\",tabIndex:\"-1\",children:(0,e.jsx)(a.span,{className:\"icon icon-link\"})}),\"In Action\"]}),(0,e.jsx)(a.p,{children:\"Its a lot more interesting to see this thing in action than to read about it!\"}),(0,e.jsx)(c,{url:\"https://www.youtube.com/watch?v=loKG4xsnrkw\"})]})}}var w=f;function I(n,t,s){throw new Error(\"Expected \"+(t?\"component\":\"object\")+\" `\"+n+\"` to be defined: you likely forgot to import, pass, or provide it.\"+(s?\"\\nIt\\u2019s referenced in your code at `\"+s+\"` in `/Users/john/Desktop/code/perpetuadigitalwebsite/_mdx_bundler_entry_point-f2e0c507-ec95-423f-b457-27fb4bbf4e93.mdx`\":\"\"))}return N(v);})();\n;return Component;"
  },
  "_id": "blog/launch-github-sync-part-4.mdx",
  "_raw": {
    "sourceFilePath": "blog/launch-github-sync-part-4.mdx",
    "sourceFileName": "launch-github-sync-part-4.mdx",
    "sourceFileDir": "blog",
    "contentType": "mdx",
    "flattenedPath": "blog/launch-github-sync-part-4"
  },
  "type": "Blog",
  "readingTime": {
    "text": "6 min read",
    "minutes": 5.795,
    "time": 347700,
    "words": 1159
  },
  "slug": "launch-github-sync-part-4",
  "toc": [
    {
      "value": "So where exactly are we at?",
      "url": "#so-where-exactly-are-we-at",
      "depth": 2
    },
    {
      "value": "Working with the Launch API, aka the Reactor API",
      "url": "#working-with-the-launch-api-aka-the-reactor-api",
      "depth": 2
    },
    {
      "value": "Steps to add a change to Launch library via the API",
      "url": "#steps-to-add-a-change-to-launch-library-via-the-api",
      "depth": 2
    },
    {
      "value": "From Github to dev library",
      "url": "#from-github-to-dev-library",
      "depth": 2
    },
    {
      "value": "Launch Callbacks",
      "url": "#launch-callbacks",
      "depth": 2
    },
    {
      "value": "How I am using Launch callbacks",
      "url": "#how-i-am-using-launch-callbacks",
      "depth": 2
    },
    {
      "value": "In Action",
      "url": "#in-action",
      "depth": 2
    }
  ]
}
