{
  "title": "Syncing Adobe Launch/Tags with Github - Part 2: The Github Push Webhook",
  "date": "2027-04-18T00:00:00.000Z",
  "tags": [
    "adobe launch",
    "adobe tags",
    "javascript",
    "github",
    "automation"
  ],
  "draft": false,
  "summary": "How to use Github to build, sync, & deploy custom code directly to Adobe Launch/Tags - Part 2",
  "body": {
    "raw": "\n## The Github push webhook\n\nAfter the setup that I mentioned in the [first post](https://www.perpetua.digital/blog/launch-github-sync-part-1) is completed,\nI can tap into the Github push webhook to kickoff the syncing between\nGithub and Launch. This webhook will notify my API that some file modifications have\noccurred in Github and that those changes that _may_ require updates to Launch data elements.\nI say _may_ here because the Github push webhook will notify me of all file modifications in my\nrepository and it will be up to me to determine what, if anything, needs to be synced with Launch.\n\nThe Github push webhook also introduces the first layer of security in the form of a\n[Webhook secret](https://docs.github.com/en/webhooks-and-events/webhooks/securing-your-webhooks#setting-your-secret-token).\nThis allows me to verify calls made to the API. More on that later.\n\nSo what exactly is webhook? Off the top of my head, and by that, I according to ChatGPT, a webhook is:\n\n> a way for two applications to communicate with each other in real-time. It is a type of API (Application Programming Interface) that allows one application to send data to \\ another application automatically whenever a certain event occurs.\n>\n> Webhooks work by sending a notification to a URL endpoint that is specified by the receiving application. This notification typically contains a payload of data that describes the event that triggered the webhook.\n\nIn order to start receiving notifications from Github about file updates via the push webhook, I need to do 2 things:\n\n- Build and API endpoint for the webhook to send its POST requests to\n- Configure that endpoint as a webhook in my Github repo\n\nI'll start with building an endpoint...\n\n## My API for receiving Github push webhooks\n\nFortunately for me, going super in depth about building and hosting API endpoints is\nbeyond the scope of this little blog thing I got going. If you are new to such things, I\n_highly_ suggest reading about building APIs in [Flask](https://pythonbasics.org/flask-rest-api/)\nfor Python (like mine is) or [Express](https://medium.com/makers-byte/building-a-restful-api-with-express-js-a-beginners-guide-dcb1a1e3520d) for Node.\nOnce built, you then need to host your endpoint server somwhere public so Github can access it.\nLots of options here, the most obvious (and the one I went with) AWS\n[web hook gateways](https://medium.com/mindorks/building-webhook-is-easy-using-aws-lambda-and-api-gateway-56f5e5c3a596).\n\nBelow is the [Flask route](https://exploreflask.com/en/latest/views.html) for my endpoint that will\nreceive and handle pushes from Github. If you've never worked in Flask or made an API before, it might look a\nlittle complicated, but it really only does a couple things. Here's the highlights\n\n- `@verify_github_webhook_secret` is a Python decorator that makes sure any POST requests\n  to this route not only come from Github, but come from me specifically.\n- `modified_data_element_files` is a `list` of all the data element files that have been updated\n  in this push. If there are _zero_ changed data element files, like if I updated a `README.md` file,\n  the entire flow stops here. No need to sync with Launch.\n- The `dict` called `data` contains all the information I will need about this push to look up the\n  _actual content_ of the files. The push webhook only says that contents was modified, but not\n  specifically what those modifications were.\n- Finally, if everything checks out, I invoke the next Lambda in the flow which will call the github\n  API to extract the specific file contents which will prepare them for the Launch API. _In my actual code\n  `FunctionName` is the name of the next lambda I call._\n\n```python\n@app.route(\"/github-webhook-handler\", methods=['POST'])\n@verify_github_webhook_secret\ndef github_webhook():\n    try:\n        try:\n            payload = request.get_json()\n            modified_files = payload['head_commit']['modified']\n            author_name = payload['head_commit']['author']['name']\n            owner = payload['head_commit']['author']['username']\n            repo = payload['repository']['name']\n            ref = payload['ref']\n        except Exception:\n            return make_response(jsonify(error='Error parsing github data from request'), 400)\n\n        # find modified data elements files\n        modified_data_element_files = [\n            file for file in modified_files if file.startswith(\"dataelements\")]\n\n        # the request was successful, no action needs to be taken\n        if len(modified_data_element_files) == 0:\n            return make_response(jsonify(message='No files in the data elements directory have been modified'), 204)\n\n        # everything is good - trigger the lambda - the lambda does the launch updating!\n        data = {\n            \"message\": \"OK\",\n            \"modified_data_element_files\": modified_data_element_files,\n            \"author_name\": author_name,\n            \"owner\": owner,\n            \"repo\": repo,\n            \"ref\": ref\n        }\n\n        # invoke the next lambda here\n        client = boto3.client('lambda')\n        response = client.invoke(\n            FunctionName='some fake name here',\n            InvocationType='Event',\n            Payload=json.dumps(data)\n        )\n        # return success\n        response_data = {\n            \"statusCode\": 200,\n            \"body\": data\n        }\n        return make_response(jsonify(response_data), 200)\n    except Exception as e:\n        return make_response(jsonify(error=f'Error {e}'), 500)\n```\n\nBy far, the easiest way to create and deploy AWS Lambdas and API Gateways is through the\n[Serverless](https://www.serverless.com/) framework. It takes care of the drudgery of uploading\npackages to AWS and has a nicer UI. Highly recommended.\n\nOnce I get this API deployed, I'm going to have a publicly reachable route to POST to. First task complete. It is this\nURL that I then configure inside of Github.\n\nMy deployed API will have a route that will look _something_ like the URL below. Notice how the path `github-webhook-handler`\nis the path I defined in `@app.route` above.\n\n`https://fakedatahere.execute-api.aws-region-name-here.amazonaws.com/github-webhook-handler`\n\n## Setting up a Push webhook on a Github repo\n\nNow that I have my endpoint URL all set up and running in \"the cloud\",\nI need to tell my Github repo to post to it on Push events. To do that,\nI go into my Repo and got to `Settings > Webhooks > Add Webhook`.\n\n![IMAGE OF ADD WEBHOOK SCREEN](https://images.ctfassets.net/on47yk52ubpi/3OVr7rQodGU65n9i6iZMiG/7f86e59fe320e74d868b34602e5ad2e9/Screenshot_2023-04-20_at_11.49.56_PM.png)\n\n<figure>\n  <figcaption>\n    The endpoint URL I made goes in `payload url` and I need to [generate a random\n    string](https://www.random.org/strings/) for a secret. SAVE IT SOMEWHERE SAFE!\n  </figcaption>\n</figure>\n\nOnce the webhook is setup, I can QA that it's working by doing some push events and\nchecking the **Recent Deliveries** section. If something is broken, like I pasted the wrong URL\nor I don't have my secret keys setup, errors will show here.\n\n![IMAGE OF RECENT DELIVERIES](https://images.ctfassets.net/on47yk52ubpi/4x3o3ACbRyF7o2eq7xUFwp/8653cb21c4fe50e96a98b4be1bb4e14e/Screenshot_2023-04-20_at_11.51.55_PM.png)\n\n## In action\n\nSo all this happens in an instant, but here is what happens step by step (with pictures!!!!!)\n",
    "code": "var Component=(()=>{var h=Object.create;var c=Object.defineProperty;var d=Object.getOwnPropertyDescriptor;var p=Object.getOwnPropertyNames;var m=Object.getPrototypeOf,u=Object.prototype.hasOwnProperty;var k=(a,s)=>()=>(s||a((s={exports:{}}).exports,s),s.exports),N=(a,s)=>{for(var t in s)c(a,t,{get:s[t],enumerable:!0})},o=(a,s,t,n)=>{if(s&&typeof s==\"object\"||typeof s==\"function\")for(let i of p(s))!u.call(a,i)&&i!==t&&c(a,i,{get:()=>s[i],enumerable:!(n=d(s,i))||n.enumerable});return a};var g=(a,s,t)=>(t=a!=null?h(m(a)):{},o(s||!a||!a.__esModule?c(t,\"default\",{value:a,enumerable:!0}):t,a)),b=a=>o(c({},\"__esModule\",{value:!0}),a);var r=k((v,l)=>{l.exports=_jsx_runtime});var I={};N(I,{default:()=>w,frontmatter:()=>f});var e=g(r()),f={title:\"Syncing Adobe Launch/Tags with Github - Part 2: The Github Push Webhook\",date:\"2027-04-18\",tags:[\"adobe launch\",\"adobe tags\",\"javascript\",\"github\",\"automation\"],draft:!1,summary:\"How to use Github to build, sync, & deploy custom code directly to Adobe Launch/Tags - Part 2\"};function y(a={}){let{wrapper:s}=a.components||{};return s?(0,e.jsx)(s,Object.assign({},a,{children:(0,e.jsx)(t,{})})):t();function t(){let n=Object.assign({h2:\"h2\",a:\"a\",span:\"span\",p:\"p\",em:\"em\",blockquote:\"blockquote\",ul:\"ul\",li:\"li\",code:\"code\",pre:\"pre\",img:\"img\",strong:\"strong\"},a.components);return(0,e.jsxs)(e.Fragment,{children:[(0,e.jsxs)(n.h2,{id:\"the-github-push-webhook\",children:[(0,e.jsx)(n.a,{href:\"#the-github-push-webhook\",\"aria-hidden\":\"true\",tabIndex:\"-1\",children:(0,e.jsx)(n.span,{className:\"icon icon-link\"})}),\"The Github push webhook\"]}),(0,e.jsxs)(n.p,{children:[\"After the setup that I mentioned in the \",(0,e.jsx)(n.a,{href:\"https://www.perpetua.digital/blog/launch-github-sync-part-1\",children:\"first post\"}),\" is completed, I can tap into the Github push webhook to kickoff the syncing between Github and Launch. This webhook will notify my API that some file modifications have occurred in Github and that those changes that \",(0,e.jsx)(n.em,{children:\"may\"}),\" require updates to Launch data elements. I say \",(0,e.jsx)(n.em,{children:\"may\"}),\" here because the Github push webhook will notify me of all file modifications in my repository and it will be up to me to determine what, if anything, needs to be synced with Launch.\"]}),(0,e.jsxs)(n.p,{children:[\"The Github push webhook also introduces the first layer of security in the form of a \",(0,e.jsx)(n.a,{href:\"https://docs.github.com/en/webhooks-and-events/webhooks/securing-your-webhooks#setting-your-secret-token\",children:\"Webhook secret\"}),\". This allows me to verify calls made to the API. More on that later.\"]}),(0,e.jsx)(n.p,{children:\"So what exactly is webhook? Off the top of my head, and by that, I according to ChatGPT, a webhook is:\"}),(0,e.jsxs)(n.blockquote,{children:[(0,e.jsx)(n.p,{children:\"a way for two applications to communicate with each other in real-time. It is a type of API (Application Programming Interface) that allows one application to send data to \\\\ another application automatically whenever a certain event occurs.\"}),(0,e.jsx)(n.p,{children:\"Webhooks work by sending a notification to a URL endpoint that is specified by the receiving application. This notification typically contains a payload of data that describes the event that triggered the webhook.\"})]}),(0,e.jsx)(n.p,{children:\"In order to start receiving notifications from Github about file updates via the push webhook, I need to do 2 things:\"}),(0,e.jsxs)(n.ul,{children:[(0,e.jsx)(n.li,{children:\"Build and API endpoint for the webhook to send its POST requests to\"}),(0,e.jsx)(n.li,{children:\"Configure that endpoint as a webhook in my Github repo\"})]}),(0,e.jsx)(n.p,{children:\"I'll start with building an endpoint...\"}),(0,e.jsxs)(n.h2,{id:\"my-api-for-receiving-github-push-webhooks\",children:[(0,e.jsx)(n.a,{href:\"#my-api-for-receiving-github-push-webhooks\",\"aria-hidden\":\"true\",tabIndex:\"-1\",children:(0,e.jsx)(n.span,{className:\"icon icon-link\"})}),\"My API for receiving Github push webhooks\"]}),(0,e.jsxs)(n.p,{children:[\"Fortunately for me, going super in depth about building and hosting API endpoints is beyond the scope of this little blog thing I got going. If you are new to such things, I \",(0,e.jsx)(n.em,{children:\"highly\"}),\" suggest reading about building APIs in \",(0,e.jsx)(n.a,{href:\"https://pythonbasics.org/flask-rest-api/\",children:\"Flask\"}),\" for Python (like mine is) or \",(0,e.jsx)(n.a,{href:\"https://medium.com/makers-byte/building-a-restful-api-with-express-js-a-beginners-guide-dcb1a1e3520d\",children:\"Express\"}),\" for Node. Once built, you then need to host your endpoint server somwhere public so Github can access it. Lots of options here, the most obvious (and the one I went with) AWS \",(0,e.jsx)(n.a,{href:\"https://medium.com/mindorks/building-webhook-is-easy-using-aws-lambda-and-api-gateway-56f5e5c3a596\",children:\"web hook gateways\"}),\".\"]}),(0,e.jsxs)(n.p,{children:[\"Below is the \",(0,e.jsx)(n.a,{href:\"https://exploreflask.com/en/latest/views.html\",children:\"Flask route\"}),\" for my endpoint that will receive and handle pushes from Github. If you've never worked in Flask or made an API before, it might look a little complicated, but it really only does a couple things. Here's the highlights\"]}),(0,e.jsxs)(n.ul,{children:[(0,e.jsxs)(n.li,{children:[(0,e.jsx)(n.code,{children:\"@verify_github_webhook_secret\"}),\" is a Python decorator that makes sure any POST requests to this route not only come from Github, but come from me specifically.\"]}),(0,e.jsxs)(n.li,{children:[(0,e.jsx)(n.code,{children:\"modified_data_element_files\"}),\" is a \",(0,e.jsx)(n.code,{children:\"list\"}),\" of all the data element files that have been updated in this push. If there are \",(0,e.jsx)(n.em,{children:\"zero\"}),\" changed data element files, like if I updated a \",(0,e.jsx)(n.code,{children:\"README.md\"}),\" file, the entire flow stops here. No need to sync with Launch.\"]}),(0,e.jsxs)(n.li,{children:[\"The \",(0,e.jsx)(n.code,{children:\"dict\"}),\" called \",(0,e.jsx)(n.code,{children:\"data\"}),\" contains all the information I will need about this push to look up the \",(0,e.jsx)(n.em,{children:\"actual content\"}),\" of the files. The push webhook only says that contents was modified, but not specifically what those modifications were.\"]}),(0,e.jsxs)(n.li,{children:[\"Finally, if everything checks out, I invoke the next Lambda in the flow which will call the github API to extract the specific file contents which will prepare them for the Launch API. \",(0,e.jsxs)(n.em,{children:[\"In my actual code \",(0,e.jsx)(n.code,{children:\"FunctionName\"}),\" is the name of the next lambda I call.\"]})]})]}),(0,e.jsx)(n.pre,{className:\"language-python\",children:(0,e.jsxs)(n.code,{className:\"language-python code-highlight\",children:[(0,e.jsxs)(n.span,{className:\"code-line\",children:[(0,e.jsxs)(n.span,{className:\"token punctuation annotation decorator\",children:[\"@app\",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\".\"}),\"route\"]}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"(\"}),(0,e.jsx)(n.span,{className:\"token string\",children:'\"/github-webhook-handler\"'}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\",\"}),\" methods\",(0,e.jsx)(n.span,{className:\"token operator\",children:\"=\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"[\"}),(0,e.jsx)(n.span,{className:\"token string\",children:\"'POST'\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"]\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\")\"}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[(0,e.jsx)(n.span,{className:\"token punctuation annotation decorator\",children:\"@verify_github_webhook_secret\"}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[(0,e.jsx)(n.span,{className:\"token keyword\",children:\"def\"}),\" \",(0,e.jsx)(n.span,{className:\"token function\",children:\"github_webhook\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"(\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\")\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\":\"}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[\"    \",(0,e.jsx)(n.span,{className:\"token keyword\",children:\"try\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\":\"}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[\"        \",(0,e.jsx)(n.span,{className:\"token keyword\",children:\"try\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\":\"}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[\"            payload \",(0,e.jsx)(n.span,{className:\"token operator\",children:\"=\"}),\" request\",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\".\"}),\"get_json\",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"(\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\")\"}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[\"            modified_files \",(0,e.jsx)(n.span,{className:\"token operator\",children:\"=\"}),\" payload\",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"[\"}),(0,e.jsx)(n.span,{className:\"token string\",children:\"'head_commit'\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"]\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"[\"}),(0,e.jsx)(n.span,{className:\"token string\",children:\"'modified'\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"]\"}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[\"            author_name \",(0,e.jsx)(n.span,{className:\"token operator\",children:\"=\"}),\" payload\",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"[\"}),(0,e.jsx)(n.span,{className:\"token string\",children:\"'head_commit'\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"]\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"[\"}),(0,e.jsx)(n.span,{className:\"token string\",children:\"'author'\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"]\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"[\"}),(0,e.jsx)(n.span,{className:\"token string\",children:\"'name'\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"]\"}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[\"            owner \",(0,e.jsx)(n.span,{className:\"token operator\",children:\"=\"}),\" payload\",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"[\"}),(0,e.jsx)(n.span,{className:\"token string\",children:\"'head_commit'\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"]\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"[\"}),(0,e.jsx)(n.span,{className:\"token string\",children:\"'author'\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"]\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"[\"}),(0,e.jsx)(n.span,{className:\"token string\",children:\"'username'\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"]\"}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[\"            repo \",(0,e.jsx)(n.span,{className:\"token operator\",children:\"=\"}),\" payload\",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"[\"}),(0,e.jsx)(n.span,{className:\"token string\",children:\"'repository'\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"]\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"[\"}),(0,e.jsx)(n.span,{className:\"token string\",children:\"'name'\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"]\"}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[\"            ref \",(0,e.jsx)(n.span,{className:\"token operator\",children:\"=\"}),\" payload\",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"[\"}),(0,e.jsx)(n.span,{className:\"token string\",children:\"'ref'\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"]\"}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[\"        \",(0,e.jsx)(n.span,{className:\"token keyword\",children:\"except\"}),\" Exception\",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\":\"}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[\"            \",(0,e.jsx)(n.span,{className:\"token keyword\",children:\"return\"}),\" make_response\",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"(\"}),\"jsonify\",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"(\"}),\"error\",(0,e.jsx)(n.span,{className:\"token operator\",children:\"=\"}),(0,e.jsx)(n.span,{className:\"token string\",children:\"'Error parsing github data from request'\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\")\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\",\"}),\" \",(0,e.jsx)(n.span,{className:\"token number\",children:\"400\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\")\"}),`\n`]}),(0,e.jsx)(n.span,{className:\"code-line\",children:`\n`}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[\"        \",(0,e.jsx)(n.span,{className:\"token comment\",children:\"# find modified data elements files\"}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[\"        modified_data_element_files \",(0,e.jsx)(n.span,{className:\"token operator\",children:\"=\"}),\" \",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"[\"}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[\"            \",(0,e.jsx)(n.span,{className:\"token builtin\",children:\"file\"}),\" \",(0,e.jsx)(n.span,{className:\"token keyword\",children:\"for\"}),\" \",(0,e.jsx)(n.span,{className:\"token builtin\",children:\"file\"}),\" \",(0,e.jsx)(n.span,{className:\"token keyword\",children:\"in\"}),\" modified_files \",(0,e.jsx)(n.span,{className:\"token keyword\",children:\"if\"}),\" \",(0,e.jsx)(n.span,{className:\"token builtin\",children:\"file\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\".\"}),\"startswith\",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"(\"}),(0,e.jsx)(n.span,{className:\"token string\",children:'\"dataelements\"'}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\")\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"]\"}),`\n`]}),(0,e.jsx)(n.span,{className:\"code-line\",children:`\n`}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[\"        \",(0,e.jsx)(n.span,{className:\"token comment\",children:\"# the request was successful, no action needs to be taken\"}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[\"        \",(0,e.jsx)(n.span,{className:\"token keyword\",children:\"if\"}),\" \",(0,e.jsx)(n.span,{className:\"token builtin\",children:\"len\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"(\"}),\"modified_data_element_files\",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\")\"}),\" \",(0,e.jsx)(n.span,{className:\"token operator\",children:\"==\"}),\" \",(0,e.jsx)(n.span,{className:\"token number\",children:\"0\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\":\"}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[\"            \",(0,e.jsx)(n.span,{className:\"token keyword\",children:\"return\"}),\" make_response\",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"(\"}),\"jsonify\",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"(\"}),\"message\",(0,e.jsx)(n.span,{className:\"token operator\",children:\"=\"}),(0,e.jsx)(n.span,{className:\"token string\",children:\"'No files in the data elements directory have been modified'\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\")\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\",\"}),\" \",(0,e.jsx)(n.span,{className:\"token number\",children:\"204\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\")\"}),`\n`]}),(0,e.jsx)(n.span,{className:\"code-line\",children:`\n`}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[\"        \",(0,e.jsx)(n.span,{className:\"token comment\",children:\"# everything is good - trigger the lambda - the lambda does the launch updating!\"}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[\"        data \",(0,e.jsx)(n.span,{className:\"token operator\",children:\"=\"}),\" \",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"{\"}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[\"            \",(0,e.jsx)(n.span,{className:\"token string\",children:'\"message\"'}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\":\"}),\" \",(0,e.jsx)(n.span,{className:\"token string\",children:'\"OK\"'}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\",\"}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[\"            \",(0,e.jsx)(n.span,{className:\"token string\",children:'\"modified_data_element_files\"'}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\":\"}),\" modified_data_element_files\",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\",\"}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[\"            \",(0,e.jsx)(n.span,{className:\"token string\",children:'\"author_name\"'}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\":\"}),\" author_name\",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\",\"}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[\"            \",(0,e.jsx)(n.span,{className:\"token string\",children:'\"owner\"'}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\":\"}),\" owner\",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\",\"}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[\"            \",(0,e.jsx)(n.span,{className:\"token string\",children:'\"repo\"'}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\":\"}),\" repo\",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\",\"}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[\"            \",(0,e.jsx)(n.span,{className:\"token string\",children:'\"ref\"'}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\":\"}),` ref\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[\"        \",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"}\"}),`\n`]}),(0,e.jsx)(n.span,{className:\"code-line\",children:`\n`}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[\"        \",(0,e.jsx)(n.span,{className:\"token comment\",children:\"# invoke the next lambda here\"}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[\"        client \",(0,e.jsx)(n.span,{className:\"token operator\",children:\"=\"}),\" boto3\",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\".\"}),\"client\",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"(\"}),(0,e.jsx)(n.span,{className:\"token string\",children:\"'lambda'\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\")\"}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[\"        response \",(0,e.jsx)(n.span,{className:\"token operator\",children:\"=\"}),\" client\",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\".\"}),\"invoke\",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"(\"}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[\"            FunctionName\",(0,e.jsx)(n.span,{className:\"token operator\",children:\"=\"}),(0,e.jsx)(n.span,{className:\"token string\",children:\"'some fake name here'\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\",\"}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[\"            InvocationType\",(0,e.jsx)(n.span,{className:\"token operator\",children:\"=\"}),(0,e.jsx)(n.span,{className:\"token string\",children:\"'Event'\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\",\"}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[\"            Payload\",(0,e.jsx)(n.span,{className:\"token operator\",children:\"=\"}),\"json\",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\".\"}),\"dumps\",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"(\"}),\"data\",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\")\"}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[\"        \",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\")\"}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[\"        \",(0,e.jsx)(n.span,{className:\"token comment\",children:\"# return success\"}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[\"        response_data \",(0,e.jsx)(n.span,{className:\"token operator\",children:\"=\"}),\" \",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"{\"}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[\"            \",(0,e.jsx)(n.span,{className:\"token string\",children:'\"statusCode\"'}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\":\"}),\" \",(0,e.jsx)(n.span,{className:\"token number\",children:\"200\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\",\"}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[\"            \",(0,e.jsx)(n.span,{className:\"token string\",children:'\"body\"'}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\":\"}),` data\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[\"        \",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"}\"}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[\"        \",(0,e.jsx)(n.span,{className:\"token keyword\",children:\"return\"}),\" make_response\",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"(\"}),\"jsonify\",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"(\"}),\"response_data\",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\")\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\",\"}),\" \",(0,e.jsx)(n.span,{className:\"token number\",children:\"200\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\")\"}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[\"    \",(0,e.jsx)(n.span,{className:\"token keyword\",children:\"except\"}),\" Exception \",(0,e.jsx)(n.span,{className:\"token keyword\",children:\"as\"}),\" e\",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\":\"}),`\n`]}),(0,e.jsxs)(n.span,{className:\"code-line\",children:[\"        \",(0,e.jsx)(n.span,{className:\"token keyword\",children:\"return\"}),\" make_response\",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"(\"}),\"jsonify\",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"(\"}),\"error\",(0,e.jsx)(n.span,{className:\"token operator\",children:\"=\"}),(0,e.jsxs)(n.span,{className:\"token string-interpolation\",children:[(0,e.jsx)(n.span,{className:\"token string\",children:\"f'Error \"}),(0,e.jsxs)(n.span,{className:\"token interpolation\",children:[(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"{\"}),\"e\",(0,e.jsx)(n.span,{className:\"token punctuation\",children:\"}\"})]}),(0,e.jsx)(n.span,{className:\"token string\",children:\"'\"})]}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\")\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\",\"}),\" \",(0,e.jsx)(n.span,{className:\"token number\",children:\"500\"}),(0,e.jsx)(n.span,{className:\"token punctuation\",children:\")\"}),`\n`]})]})}),(0,e.jsxs)(n.p,{children:[\"By far, the easiest way to create and deploy AWS Lambdas and API Gateways is through the \",(0,e.jsx)(n.a,{href:\"https://www.serverless.com/\",children:\"Serverless\"}),\" framework. It takes care of the drudgery of uploading packages to AWS and has a nicer UI. Highly recommended.\"]}),(0,e.jsx)(n.p,{children:\"Once I get this API deployed, I'm going to have a publicly reachable route to POST to. First task complete. It is this URL that I then configure inside of Github.\"}),(0,e.jsxs)(n.p,{children:[\"My deployed API will have a route that will look \",(0,e.jsx)(n.em,{children:\"something\"}),\" like the URL below. Notice how the path \",(0,e.jsx)(n.code,{children:\"github-webhook-handler\"}),\" is the path I defined in \",(0,e.jsx)(n.code,{children:\"@app.route\"}),\" above.\"]}),(0,e.jsx)(n.p,{children:(0,e.jsx)(n.code,{children:\"https://fakedatahere.execute-api.aws-region-name-here.amazonaws.com/github-webhook-handler\"})}),(0,e.jsxs)(n.h2,{id:\"setting-up-a-push-webhook-on-a-github-repo\",children:[(0,e.jsx)(n.a,{href:\"#setting-up-a-push-webhook-on-a-github-repo\",\"aria-hidden\":\"true\",tabIndex:\"-1\",children:(0,e.jsx)(n.span,{className:\"icon icon-link\"})}),\"Setting up a Push webhook on a Github repo\"]}),(0,e.jsxs)(n.p,{children:['Now that I have my endpoint URL all set up and running in \"the cloud\", I need to tell my Github repo to post to it on Push events. To do that, I go into my Repo and got to ',(0,e.jsx)(n.code,{children:\"Settings > Webhooks > Add Webhook\"}),\".\"]}),(0,e.jsx)(n.p,{children:(0,e.jsx)(n.img,{alt:\"IMAGE OF ADD WEBHOOK SCREEN\",src:\"https://images.ctfassets.net/on47yk52ubpi/3OVr7rQodGU65n9i6iZMiG/7f86e59fe320e74d868b34602e5ad2e9/Screenshot_2023-04-20_at_11.49.56_PM.png\"})}),(0,e.jsx)(\"figure\",{children:(0,e.jsx)(\"figcaption\",{children:(0,e.jsxs)(n.p,{children:[\"The endpoint URL I made goes in \",(0,e.jsx)(n.code,{children:\"payload url\"}),\" and I need to \",(0,e.jsx)(n.a,{href:\"https://www.random.org/strings/\",children:\"generate a random string\"}),\" for a secret. SAVE IT SOMEWHERE SAFE!\"]})})}),(0,e.jsxs)(n.p,{children:[\"Once the webhook is setup, I can QA that it's working by doing some push events and checking the \",(0,e.jsx)(n.strong,{children:\"Recent Deliveries\"}),\" section. If something is broken, like I pasted the wrong URL or I don't have my secret keys setup, errors will show here.\"]}),(0,e.jsx)(n.p,{children:(0,e.jsx)(n.img,{alt:\"IMAGE OF RECENT DELIVERIES\",src:\"https://images.ctfassets.net/on47yk52ubpi/4x3o3ACbRyF7o2eq7xUFwp/8653cb21c4fe50e96a98b4be1bb4e14e/Screenshot_2023-04-20_at_11.51.55_PM.png\"})}),(0,e.jsxs)(n.h2,{id:\"in-action\",children:[(0,e.jsx)(n.a,{href:\"#in-action\",\"aria-hidden\":\"true\",tabIndex:\"-1\",children:(0,e.jsx)(n.span,{className:\"icon icon-link\"})}),\"In action\"]}),(0,e.jsx)(n.p,{children:\"So all this happens in an instant, but here is what happens step by step (with pictures!!!!!)\"})]})}}var w=y;return b(I);})();\n;return Component;"
  },
  "_id": "blog/launch-github-sync-part-2.mdx",
  "_raw": {
    "sourceFilePath": "blog/launch-github-sync-part-2.mdx",
    "sourceFileName": "launch-github-sync-part-2.mdx",
    "sourceFileDir": "blog",
    "contentType": "mdx",
    "flattenedPath": "blog/launch-github-sync-part-2"
  },
  "type": "Blog",
  "readingTime": {
    "text": "5 min read",
    "minutes": 4.87,
    "time": 292200,
    "words": 974
  },
  "slug": "launch-github-sync-part-2",
  "toc": [
    {
      "value": "The Github push webhook",
      "url": "#the-github-push-webhook",
      "depth": 2
    },
    {
      "value": "My API for receiving Github push webhooks",
      "url": "#my-api-for-receiving-github-push-webhooks",
      "depth": 2
    },
    {
      "value": "Setting up a Push webhook on a Github repo",
      "url": "#setting-up-a-push-webhook-on-a-github-repo",
      "depth": 2
    },
    {
      "value": "In action",
      "url": "#in-action",
      "depth": 2
    }
  ]
}