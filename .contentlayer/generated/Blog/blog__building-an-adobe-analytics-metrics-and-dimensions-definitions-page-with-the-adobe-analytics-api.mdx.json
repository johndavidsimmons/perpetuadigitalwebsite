{
  "title": "Building an Adobe Analytics Metrics & Dimensions definitions page with the Adobe Analytics API",
  "date": "2022-12-07T00:00:00.000Z",
  "tags": [
    "adobe analytics",
    "markdown",
    "api",
    "automation"
  ],
  "draft": false,
  "summary": "How to make metric and dimension definitions more easily available",
  "body": {
    "raw": "\nA lot of people in my organization need to know what Adobe metrics and dimensions mean.\nThey should not have to know how to go into the Report Suites Admin section to get this information.\nData Warehouse and other such raw data consumers don’t get nicely named events and dimensions like _User\nLogin_ and _Article Name_; they get _event304_ and _eVar6_. I used the Adobe Analytics API to build a simple,\nunauthenticated (no Adobe login required) page where people can quickly and easily look up what all these data points mean.\n\n**Here is an example of what I built in my organization (with fake data of course):**\n\nhttps://johndavidsimmons.github.io/adobevargrid/adobevargrid\n\n**Here is a link to the code on Github:**\n\nhttps://github.com/johndavidsimmons/adobevargrid\n\n<br></br>\n\n![demo gif](https://images.ctfassets.net/on47yk52ubpi/1TrQCpsMRF7RET07TOdkvP/7ffe8bfcc1df39b08687c1b0ee406fe4/1_ui_iwDDm_LB7EuApCl9u8w.gif)\n\n---\n\n## Preamble\n\nFirst things first, before I can do anything with the Adobe Analytics API (or any Adobe API),\nI need to setup a new project in the developer console. This process will generate the necessary keys\nI need to make API calls. If you have never done it before, check out the tutorials here: https://developer.adobe.com/developer-console/\n\nI did my last Adobe API project in Node, so I’ll do this one in Python. I will also award myself bonus\npoints for not using the [Adobe Analytics Python library](https://github.com/pitchmuc/adobe-analytics-api-2.0). I am going to skip over some of the basic Python\nsetup stuff like virtual environments and installing packages. If you are interested in getting started with Python,\nI suggest checking out [realpython.com](https://www.realpython.com).\n\n## The beginning of the end…\n\nFor this project its actually easier to start at the end and work backwards.\nNamely, what do I want to this site to look like and where do I want do host it?\nThe looks are not so important, but the ease of automation and security are paramount.\nI want this page to update automatically and I only want it available to my organization’s users (aka people on the company VPN).\n\nEnter [Github Pages](https://pages.github.com/). Github pages are the perfect place to host analytics documentation because they\nlet you host static content written in [Markdown](https://www.markdownguide.org/) or plain HTML. Also, since you likely have an enterprise github account,\nthey have the added benefit of sitting behind your corporate VPN and are thus only available to your fellow VPN users.\nAnother great thing about Github pages is that you can tie their deployment to branch updates.\nThis is crucial to the automation process. More on that later.\n\n## Authenticating\n\nBefore I can actually communicate with Adobe Analytics via the API, I need to authenticate.\nThis done by exchanging the API credentials I created in the developer console for a [JSON Web Token](https://jwt.io/introduction).\nAdobe’s documentation on JWT exchange can be found here: https://developer.adobe.com/analytics-apis/docs/2.0/guides/jwt/.\n\n_I am borrowing a lot from the Python example in their documentation._\n\nBy exchanging my API credentials for a JWT token, I will in turn receive an access token which I can then use to make Adobe Analytics API calls.\n\n```python\ndef get_jwt(scope):\n    \"\"\"Encodes AA API creds into a JWT token\"\"\"\n    payload:dict = {\n        \"exp\": datetime.datetime.utcnow() + datetime.timedelta(seconds=30), # 30 second expiration for JWT\n        \"iss\": org_id,\n        \"sub\": tech_acct_id,\n        f\"https://{ims_host}/s/{scope}\": True,\n        \"aud\": f\"https://{ims_host}/c/{client_id}\"\n    }\n\n    # Encode the payload & sign with private key\n    return jwt.encode(payload, str.encode(private_key.replace(\"\\\\n\",\"\\n\")), algorithm=\"RS256\")\n\ndef get_access_token(jwt_token):\n    \"\"\"Requests and access token from Adobe for use in API calls\"\"\"\n    access_payload:dict = {\n        \"client_id\": client_id,\n        \"client_secret\": client_secret,\n        \"jwt_token\": jwt_token\n    }\n\n    # Send the JWT in exchange for an access token\n    # I have disabled verification here due to firewall complications\n    r = requests.post(\n        ims_exchange, data=access_payload, verify=False\n    )\n    # this is the token I need to make AA API calls\n    return r.json()[\"access_token\"]\n```\n\n## Gathering Data\n\nNow that I can authenticate, I can ask Adobe to give me information about the metrics and dimensions for a specific report suite.\nProps and Evars can be found in the [dimensions method](https://adobedocs.github.io/analytics-2.0-apis/#/Dimensions) and Events can be found in the [Metrics Method](https://adobedocs.github.io/analytics-2.0-apis/#/Metrics/getMetrics).\nThese methods both send a lot of data. I my case I only need the basics so I am filtering extraneous things like\nOOTB metrics, product events, entry/exit props, etc. I am also filtering out unused metrics and dimensions.\nTherefore, if I see an event, prop, or evar number not in my list, then it is available for use!\n\n```python\njwt_token = get_jwt(aa_scope)\naccess_token = get_access_token(jwt_token)\n\nheaders = {\n    \"accept\": \"application/json\",\n    \"x-proxy-global-company-id\": global_company_id,\n    \"x-api-key\": client_id,\n    \"Authorization\": f\"Bearer {access_token}\"\n}\n\nr = requests.get(f\"https://analytics.adobe.io/api/{global_company_id}/dimensions?rsid={rsid}\", headers=headers)\ndimensions = r.json()\nprops = filter(lambda dimension: dimension.get('extraTitleInfo') is not None and \"prop\" in dimension.get('extraTitleInfo'), dimensions)\nfiltered_props = [prop for prop in props if \"entry\" not in prop['id'] and \"exit\" not in prop['id']]\nevars = filter(lambda dimension: dimension.get('extraTitleInfo') is not None and \"evar\" in dimension.get('extraTitleInfo'), dimensions)\n\n# order props in numerical order\ndef order_nums(dimension):\n    id = dimension.get('id')\n    regex = r\"\\d+\"\n    return int(re.findall(regex,id).pop())\n\nfiltered_props.sort(key=order_nums)\n\n# for prop in filtered_props:\n    # print(prop)\n\n    # returns:\n    # {'id': 'variables/prop1', 'title': 'pagename', 'name': 'pagename', 'type': 'string', .....\n    # {'id': 'variables/prop2', 'title': 'username', 'name': 'username', 'type': 'string', .....\n    # {'id': 'variables/prop3', 'title': 'url', 'name': 'url', 'type': 'string', .....\n    # etc etc\n    # similar output for evars\n\nm = requests.get(f\"https://analytics.adobe.io/api/{global_company_id}/metrics?rsid={rsid}\", headers=headers)\nmetrics = m.json()\nevents = list(filter(lambda event: event.get(\"extraTitleInfo\") is not None and \"event\" in event.get(\"extraTitleInfo\"), metrics))\nevents.sort(key=order_nums)\n\n# for event in events:\n    # print(event)\n\n    # returns:\n    # {'id': 'metrics/event1', 'title': 'Pageview', 'name': 'Pageview', 'type': 'int', 'extraTitleInfo': 'event1',....\n    # {'id': 'metrics/event2', 'title': 'Login', 'name': 'Login', 'type': 'int', 'extraTitleInfo': 'event2', ....\n    # {'id': 'metrics/event3', 'title': 'Click', 'name': 'Click', 'type': 'int', 'extraTitleInfo': 'event3', ....\n    # etc etc\n```\n\n---\n\n## Building Markdown\n\nMarkdown is great because it allows you to build HTML elements with a simplified syntax.\nHowever, you can also mix and match standard HTML elements should the need arise.\nPython is great because you can programmatically build markdown files.\nWhat I am going to do here is essentially build a giant string of markdown step by step with all my\ndata then save the entire string to a file. An important thing to remember is that Markdown takes whitespace\ninto account between elements; hence my use of [multi-line strings](https://www.w3schools.com/python/gloss_python_multi_line_strings.asp). If things come out looking funky,\nmake sure your spacing is correct. First lets start with a head section. _I will address the functionality of the search bar later_\n\n```python\nlast_update = datetime.datetime.now() - datetime.timedelta(hours=4) # adjust for utc time of automation server\n\noutput = f\"\"\"\n# Adobe Analytics Events and Dimensions\n<br>\n*Last Updated: {last_update.strftime(\"%x - %X\")}*\n<div id=\"variablesearch\">\n    <input name=\"search\" placeholder=\"Search\" value=\"\">\n</div>\n\n## Report Suite: {rsid}\n<hr>\"\"\"\n```\n\n![building markdown](https://images.ctfassets.net/on47yk52ubpi/7qsCfG6vPziOarRpCbeJfP/e2be1c671491cf79bb23cc3912b2565a/1_JKDc94U-szKMF_Za6mTsWg.webp)\n\n<figure>\n  <figcaption>Generated Markdown</figcaption>\n</figure>\n\nSince I already have all the data I need from the API, all thats left is to make it presentable.\nI’ll use Markdown tables for this. The gist is: setup the heading for the table, loop through my Adobe data to create\ntable rows, add some spacing for the next table, repeat. There will be 3 tables: props, evars, and events.\nRemember that I am creating a giant string of markdown, so when adding the tables I am adding to the output\nstring I already created in the heading section.\n\n```python\noutput += \"\"\"\n### Props\n| Number | Name | Description |\n|----------|----------|----------|\"\"\"\n\nfor p in filtered_props:\n    description = p.get('description')\n    # descriptions come with weird formatting sometimes...\n    if description:\n        description = description.strip().replace(\"\\r\", \" \").replace(\"\\n\", \" \")\n    id = p.get('id').replace(\"variables/\", \"\")\n    name = p.get('name')\n    output += f\"\\n|{id} | {name} | {description}\"\n\n# remember to add spacing between elements in markdown\noutput += \"\\n\"\noutput += \"\"\"\n\n### Evars\n\n| Number | Name | Description |\n|----------|----------|----------|\"\"\"\n\nfor e in evars:\n    description = e.get('description')\n    if description:\n        description = description.strip().replace(\"\\r\", \" \").replace(\"\\n\", \" \")\n    id = e.get('id').replace(\"variables/\", \"\")\n    name = e.get('name')\n    output += f\"\\n|{id}|{name}|{description}|\"\n\noutput += \"\\n\"\noutput += \"\"\"\n\n### Events\n\n| Number | Name | Description |\n|----------|----------|----------|\"\"\"\n\nfor e in list(events):\n    description = e.get('description')\n    if description:\n        description = description.strip().replace(\"\\r\", \" \").replace(\"\\n\", \" \")\n    id = e.get('id').replace(\"metrics/\", \"\")\n    name = e.get('name')\n    output += f\"\\n|{id}|{name}|{description}|\"\n```\n\n![static outuput](https://images.ctfassets.net/on47yk52ubpi/6gC7J65yYtbxEomc2WaAy0/d97d530ec78976cc5f3d3c4c09026b6c/1_tY45-kPLBT7BiiOUyPRd1g.webp)\n\n<figure>\n  <figcaption>\n    These are all fake, but this is the exact output format I want. This is also truncated for\n    brevity. A real report suite will likely have hundreds of rows.\n  </figcaption>\n</figure>\n\n---\n\n## Style & Search\n\nWhen there are hundreds of rows the table needs some color to break it up.\nYou can add styling to the output in plain HTML since markdown is interpreted by the\nbrowser as HTML (the markdown tables become regular HTML tables with columns, rows, etc.).\nI’ll color every other row just to make it so this thing isn’t a wall of text.\n\n```python\n# CSS\noutput += \"\"\"\n<style>\n    tr:nth-child(even) {\n        background-color:#ECECEC !important;\n    }\n</style>\n\"\"\"\n```\n\n![style rows](https://images.ctfassets.net/on47yk52ubpi/42v50YAkTlqh55yOmAOe74/dabe39bd9f2b714e4badd039ba8f9daf/1_xsB1269m6BRlp6F4YqYNDg.webp)\n\n<figure>\n  <figcaption>\n    You can apply any style to Markdown just as you would regular HTML elements\n  </figcaption>\n</figure>\n\nTo make this table _searchable_ (and actually useful) I need to add a little JS.\nOnce I have it working as expected, I can append it to my markdown string, just like every other element,\nto have it added to the final output file. Again, since markdown converts into regular HTML you can write javascript\nto manipulate it. Here, when someone types in the search box, the table will begin filtering for those characters.\nIf there is match in the number, name, or description, it will show only those rows.\nThis is why my search bar element has an HTML id of _variablesearch_.\n\n'Now when someone asks me _“Hey what does event57 mean?”_ I can say _“Go check the Adobe Variable grid!”_\n\n```python\n# Javascript\noutput += \"\"\"\n<script>\n    document\n      .querySelector('#variablesearch input')\n      .addEventListener('keyup', (event) => {\n        let query = event.target.value.toLowerCase();\n        let tds = Array.from(document.querySelectorAll('td'));\n        let filtered_tds = tds.filter((td) =>\n          td.innerText.toLowerCase().includes(query)\n        );\n        tds.forEach(\n          (element) => (element.parentElement.style.display = 'none')\n        );\n        filtered_tds.forEach((element) => {\n          element.parentElement.style.display = '';\n        });\n      });\n</script>\n\"\"\"\n```\n\n![demo gif](https://images.ctfassets.net/on47yk52ubpi/1TrQCpsMRF7RET07TOdkvP/7ffe8bfcc1df39b08687c1b0ee406fe4/1_ui_iwDDm_LB7EuApCl9u8w.gif)\n\n<figure>\n  <figcaption>Now I can search all my events and dimensions by name and description!</figcaption>\n</figure>\n\n## Saving the string as a file\n\nNow that I have all the markdown and HTML code I need in a single string,\nI need to save that string as a file. If this file doesn’t exist, it will be created.\nIf it does exist, it will be overwritten with the newest data.\n\n```python\nwith open('adobevargrid.md', 'w') as f:\n    f.write(output)\n```\n\n---\n\n## Automation\n\nThe page is “done” technically, but I don’t want to have to update it manually every time I\n(or any of the other admins in my Adobe Organization) make a change to our metrics and dimensions.\nI would like this page to be as accurate and up to date as possible. Because Github pages will deploy the\nlatest version of my Markdown file (_adobevargrid.md_) as a page whenever I push a change, I\ncan keep this page up to date by programmatically running the running the script (_app.py_ which generates _adobevargrid.md_)\nand programmatically pushing the latest file to Github.\n\nThere are a couple different options here depending on how comfortable you are with the command line\nand/or if your organization has integrated build tools into Github pushes such as [CircleCI](https://circleci.com/).\nKeeping with today’s theme, lets do it in Python using the [GitPython Library](https://gitpython.readthedocs.io/en/stable/).\n_Note that Github credentials must be setup prior to using this code!_\n\n```python\nimport os\nfrom git import Repo\n\n# gh.py\n# YOU MUST HAVE .git FILE CONFIGURED CORRECTLY\ndir = os.getcwd()\nrepo = Repo(dir)\nrepo.git.add(update=True)\nrepo.index.commit(\"update vargrid\")\norigin = repo.remote(name='origin')\norigin.push()\n```\n\nSo now I have a script that pulls the latest event and dimension data, builds it into a presentable file,\nand a script that automatically pushes that new file to Github to host it on a Github page. The last step is making it run every day.\n\nI will do this as a [cron job](https://www.youtube.com/watch?v=v952m13p-b4) on a virtual linux machine from Linode.\nYou could also do this as an AWS Lambda and trigger it daily with AWS EventBridge,\nbut [deploying Python environments with dependencies to AWS Lambda is kind of a pain](https://docs.aws.amazon.com/lambda/latest/dg/python-package.html). Here are the steps:\n\n- Create a virtual machine in Linode and install Git, Python, Virtualenv, etc\n- Clone my repo onto the virtual machine and navigate to the directory\n- Transfer my environment variables (API keys) to the virtual machine either by entering them directly or using a .env file\n- Create a virtualenv and install the dependencies from requirements.txt\n- Run app.py once to confirm it works\n- Run gh.py once to ensure it works\n- Navigate to my VM’s crontab file and add the following line to the end:\n\n```bash\n# etc\n# etc\n# m h dom mon dow\n0 8 * * * cd /adobevargrid && . venv/bin/activate && python app.py && python gh.py\n```\n\nNow every day at 8am my virtual machine will pull the latest metrics and events definitions directly from Adobe,\nbuild a new markdown page out of them, and automatically push that change to Github.\nWhen Github receives this change, it will transform that markdown into a viewable page via Github Pages.\n\nSee the an example of the final output here:\n\nhttps://johndavidsimmons.github.io/adobevargrid/adobevargrid\n",
    "code": "var Component=(()=>{var d=Object.create;var c=Object.defineProperty;var p=Object.getOwnPropertyDescriptor;var h=Object.getOwnPropertyNames;var m=Object.getPrototypeOf,u=Object.prototype.hasOwnProperty;var N=(a,s)=>()=>(s||a((s={exports:{}}).exports,s),s.exports),k=(a,s)=>{for(var t in s)c(a,t,{get:s[t],enumerable:!0})},l=(a,s,t,e)=>{if(s&&typeof s==\"object\"||typeof s==\"function\")for(let i of h(s))!u.call(a,i)&&i!==t&&c(a,i,{get:()=>s[i],enumerable:!(e=p(s,i))||e.enumerable});return a};var g=(a,s,t)=>(t=a!=null?d(m(a)):{},l(s||!a||!a.__esModule?c(t,\"default\",{value:a,enumerable:!0}):t,a)),b=a=>l(c({},\"__esModule\",{value:!0}),a);var r=N((A,o)=>{o.exports=_jsx_runtime});var v={};k(v,{default:()=>w,frontmatter:()=>y});var n=g(r()),y={title:\"Building an Adobe Analytics Metrics & Dimensions definitions page with the Adobe Analytics API\",date:\"2022-12-07\",tags:[\"adobe analytics\",\"markdown\",\"api\",\"automation\"],draft:!1,summary:\"How to make metric and dimension definitions more easily available\"};function f(a={}){let{wrapper:s}=a.components||{};return s?(0,n.jsx)(s,Object.assign({},a,{children:(0,n.jsx)(t,{})})):t();function t(){let e=Object.assign({p:\"p\",em:\"em\",strong:\"strong\",a:\"a\",img:\"img\",hr:\"hr\",h2:\"h2\",span:\"span\",pre:\"pre\",code:\"code\",ul:\"ul\",li:\"li\"},a.components);return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsxs)(e.p,{children:[\"A lot of people in my organization need to know what Adobe metrics and dimensions mean. They should not have to know how to go into the Report Suites Admin section to get this information. Data Warehouse and other such raw data consumers don\\u2019t get nicely named events and dimensions like \",(0,n.jsx)(e.em,{children:\"User Login\"}),\" and \",(0,n.jsx)(e.em,{children:\"Article Name\"}),\"; they get \",(0,n.jsx)(e.em,{children:\"event304\"}),\" and \",(0,n.jsx)(e.em,{children:\"eVar6\"}),\". I used the Adobe Analytics API to build a simple, unauthenticated (no Adobe login required) page where people can quickly and easily look up what all these data points mean.\"]}),(0,n.jsx)(e.p,{children:(0,n.jsx)(e.strong,{children:\"Here is an example of what I built in my organization (with fake data of course):\"})}),(0,n.jsx)(e.p,{children:(0,n.jsx)(e.a,{href:\"https://johndavidsimmons.github.io/adobevargrid/adobevargrid\",children:\"https://johndavidsimmons.github.io/adobevargrid/adobevargrid\"})}),(0,n.jsx)(e.p,{children:(0,n.jsx)(e.strong,{children:\"Here is a link to the code on Github:\"})}),(0,n.jsx)(e.p,{children:(0,n.jsx)(e.a,{href:\"https://github.com/johndavidsimmons/adobevargrid\",children:\"https://github.com/johndavidsimmons/adobevargrid\"})}),(0,n.jsx)(\"br\",{}),(0,n.jsx)(e.p,{children:(0,n.jsx)(e.img,{alt:\"demo gif\",src:\"https://images.ctfassets.net/on47yk52ubpi/1TrQCpsMRF7RET07TOdkvP/7ffe8bfcc1df39b08687c1b0ee406fe4/1_ui_iwDDm_LB7EuApCl9u8w.gif\"})}),(0,n.jsx)(e.hr,{}),(0,n.jsxs)(e.h2,{id:\"preamble\",children:[(0,n.jsx)(e.a,{href:\"#preamble\",\"aria-hidden\":\"true\",tabIndex:\"-1\",children:(0,n.jsx)(e.span,{className:\"icon icon-link\"})}),\"Preamble\"]}),(0,n.jsxs)(e.p,{children:[\"First things first, before I can do anything with the Adobe Analytics API (or any Adobe API), I need to setup a new project in the developer console. This process will generate the necessary keys I need to make API calls. If you have never done it before, check out the tutorials here: \",(0,n.jsx)(e.a,{href:\"https://developer.adobe.com/developer-console/\",children:\"https://developer.adobe.com/developer-console/\"})]}),(0,n.jsxs)(e.p,{children:[\"I did my last Adobe API project in Node, so I\\u2019ll do this one in Python. I will also award myself bonus points for not using the \",(0,n.jsx)(e.a,{href:\"https://github.com/pitchmuc/adobe-analytics-api-2.0\",children:\"Adobe Analytics Python library\"}),\". I am going to skip over some of the basic Python setup stuff like virtual environments and installing packages. If you are interested in getting started with Python, I suggest checking out \",(0,n.jsx)(e.a,{href:\"https://www.realpython.com\",children:\"realpython.com\"}),\".\"]}),(0,n.jsxs)(e.h2,{id:\"the-beginning-of-the-end\",children:[(0,n.jsx)(e.a,{href:\"#the-beginning-of-the-end\",\"aria-hidden\":\"true\",tabIndex:\"-1\",children:(0,n.jsx)(e.span,{className:\"icon icon-link\"})}),\"The beginning of the end\\u2026\"]}),(0,n.jsx)(e.p,{children:\"For this project its actually easier to start at the end and work backwards. Namely, what do I want to this site to look like and where do I want do host it? The looks are not so important, but the ease of automation and security are paramount. I want this page to update automatically and I only want it available to my organization\\u2019s users (aka people on the company VPN).\"}),(0,n.jsxs)(e.p,{children:[\"Enter \",(0,n.jsx)(e.a,{href:\"https://pages.github.com/\",children:\"Github Pages\"}),\". Github pages are the perfect place to host analytics documentation because they let you host static content written in \",(0,n.jsx)(e.a,{href:\"https://www.markdownguide.org/\",children:\"Markdown\"}),\" or plain HTML. Also, since you likely have an enterprise github account, they have the added benefit of sitting behind your corporate VPN and are thus only available to your fellow VPN users. Another great thing about Github pages is that you can tie their deployment to branch updates. This is crucial to the automation process. More on that later.\"]}),(0,n.jsxs)(e.h2,{id:\"authenticating\",children:[(0,n.jsx)(e.a,{href:\"#authenticating\",\"aria-hidden\":\"true\",tabIndex:\"-1\",children:(0,n.jsx)(e.span,{className:\"icon icon-link\"})}),\"Authenticating\"]}),(0,n.jsxs)(e.p,{children:[\"Before I can actually communicate with Adobe Analytics via the API, I need to authenticate. This done by exchanging the API credentials I created in the developer console for a \",(0,n.jsx)(e.a,{href:\"https://jwt.io/introduction\",children:\"JSON Web Token\"}),\". Adobe\\u2019s documentation on JWT exchange can be found here: \",(0,n.jsx)(e.a,{href:\"https://developer.adobe.com/analytics-apis/docs/2.0/guides/jwt/\",children:\"https://developer.adobe.com/analytics-apis/docs/2.0/guides/jwt/\"}),\".\"]}),(0,n.jsx)(e.p,{children:(0,n.jsx)(e.em,{children:\"I am borrowing a lot from the Python example in their documentation.\"})}),(0,n.jsx)(e.p,{children:\"By exchanging my API credentials for a JWT token, I will in turn receive an access token which I can then use to make Adobe Analytics API calls.\"}),(0,n.jsx)(e.pre,{className:\"language-python\",children:(0,n.jsxs)(e.code,{className:\"language-python code-highlight\",children:[(0,n.jsxs)(e.span,{className:\"code-line\",children:[(0,n.jsx)(e.span,{className:\"token keyword\",children:\"def\"}),\" \",(0,n.jsx)(e.span,{className:\"token function\",children:\"get_jwt\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"(\"}),\"scope\",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\")\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\":\"}),`\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"    \",(0,n.jsx)(e.span,{className:\"token string triple-quoted-string\",children:'\"\"\"Encodes AA API creds into a JWT token\"\"\"'}),`\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"    payload\",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\":\"}),(0,n.jsx)(e.span,{className:\"token builtin\",children:\"dict\"}),\" \",(0,n.jsx)(e.span,{className:\"token operator\",children:\"=\"}),\" \",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"{\"}),`\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"        \",(0,n.jsx)(e.span,{className:\"token string\",children:'\"exp\"'}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\":\"}),\" datetime\",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\".\"}),\"datetime\",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\".\"}),\"utcnow\",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"(\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\")\"}),\" \",(0,n.jsx)(e.span,{className:\"token operator\",children:\"+\"}),\" datetime\",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\".\"}),\"timedelta\",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"(\"}),\"seconds\",(0,n.jsx)(e.span,{className:\"token operator\",children:\"=\"}),(0,n.jsx)(e.span,{className:\"token number\",children:\"30\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\")\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\",\"}),\" \",(0,n.jsx)(e.span,{className:\"token comment\",children:\"# 30 second expiration for JWT\"}),`\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"        \",(0,n.jsx)(e.span,{className:\"token string\",children:'\"iss\"'}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\":\"}),\" org_id\",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\",\"}),`\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"        \",(0,n.jsx)(e.span,{className:\"token string\",children:'\"sub\"'}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\":\"}),\" tech_acct_id\",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\",\"}),`\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"        \",(0,n.jsxs)(e.span,{className:\"token string-interpolation\",children:[(0,n.jsx)(e.span,{className:\"token string\",children:'f\"https://'}),(0,n.jsxs)(e.span,{className:\"token interpolation\",children:[(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"{\"}),\"ims_host\",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"}\"})]}),(0,n.jsx)(e.span,{className:\"token string\",children:\"/s/\"}),(0,n.jsxs)(e.span,{className:\"token interpolation\",children:[(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"{\"}),\"scope\",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"}\"})]}),(0,n.jsx)(e.span,{className:\"token string\",children:'\"'})]}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\":\"}),\" \",(0,n.jsx)(e.span,{className:\"token boolean\",children:\"True\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\",\"}),`\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"        \",(0,n.jsx)(e.span,{className:\"token string\",children:'\"aud\"'}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\":\"}),\" \",(0,n.jsxs)(e.span,{className:\"token string-interpolation\",children:[(0,n.jsx)(e.span,{className:\"token string\",children:'f\"https://'}),(0,n.jsxs)(e.span,{className:\"token interpolation\",children:[(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"{\"}),\"ims_host\",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"}\"})]}),(0,n.jsx)(e.span,{className:\"token string\",children:\"/c/\"}),(0,n.jsxs)(e.span,{className:\"token interpolation\",children:[(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"{\"}),\"client_id\",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"}\"})]}),(0,n.jsx)(e.span,{className:\"token string\",children:'\"'})]}),`\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"    \",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"}\"}),`\n`]}),(0,n.jsx)(e.span,{className:\"code-line\",children:`\n`}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"    \",(0,n.jsx)(e.span,{className:\"token comment\",children:\"# Encode the payload & sign with private key\"}),`\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"    \",(0,n.jsx)(e.span,{className:\"token keyword\",children:\"return\"}),\" jwt\",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\".\"}),\"encode\",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"(\"}),\"payload\",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\",\"}),\" \",(0,n.jsx)(e.span,{className:\"token builtin\",children:\"str\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\".\"}),\"encode\",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"(\"}),\"private_key\",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\".\"}),\"replace\",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"(\"}),(0,n.jsx)(e.span,{className:\"token string\",children:'\"\\\\\\\\n\"'}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\",\"}),(0,n.jsx)(e.span,{className:\"token string\",children:'\"\\\\n\"'}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\")\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\")\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\",\"}),\" algorithm\",(0,n.jsx)(e.span,{className:\"token operator\",children:\"=\"}),(0,n.jsx)(e.span,{className:\"token string\",children:'\"RS256\"'}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\")\"}),`\n`]}),(0,n.jsx)(e.span,{className:\"code-line\",children:`\n`}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[(0,n.jsx)(e.span,{className:\"token keyword\",children:\"def\"}),\" \",(0,n.jsx)(e.span,{className:\"token function\",children:\"get_access_token\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"(\"}),\"jwt_token\",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\")\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\":\"}),`\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"    \",(0,n.jsx)(e.span,{className:\"token string triple-quoted-string\",children:'\"\"\"Requests and access token from Adobe for use in API calls\"\"\"'}),`\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"    access_payload\",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\":\"}),(0,n.jsx)(e.span,{className:\"token builtin\",children:\"dict\"}),\" \",(0,n.jsx)(e.span,{className:\"token operator\",children:\"=\"}),\" \",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"{\"}),`\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"        \",(0,n.jsx)(e.span,{className:\"token string\",children:'\"client_id\"'}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\":\"}),\" client_id\",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\",\"}),`\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"        \",(0,n.jsx)(e.span,{className:\"token string\",children:'\"client_secret\"'}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\":\"}),\" client_secret\",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\",\"}),`\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"        \",(0,n.jsx)(e.span,{className:\"token string\",children:'\"jwt_token\"'}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\":\"}),` jwt_token\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"    \",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"}\"}),`\n`]}),(0,n.jsx)(e.span,{className:\"code-line\",children:`\n`}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"    \",(0,n.jsx)(e.span,{className:\"token comment\",children:\"# Send the JWT in exchange for an access token\"}),`\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"    \",(0,n.jsx)(e.span,{className:\"token comment\",children:\"# I have disabled verification here due to firewall complications\"}),`\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"    r \",(0,n.jsx)(e.span,{className:\"token operator\",children:\"=\"}),\" requests\",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\".\"}),\"post\",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"(\"}),`\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"        ims_exchange\",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\",\"}),\" data\",(0,n.jsx)(e.span,{className:\"token operator\",children:\"=\"}),\"access_payload\",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\",\"}),\" verify\",(0,n.jsx)(e.span,{className:\"token operator\",children:\"=\"}),(0,n.jsx)(e.span,{className:\"token boolean\",children:\"False\"}),`\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"    \",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\")\"}),`\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"    \",(0,n.jsx)(e.span,{className:\"token comment\",children:\"# this is the token I need to make AA API calls\"}),`\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"    \",(0,n.jsx)(e.span,{className:\"token keyword\",children:\"return\"}),\" r\",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\".\"}),\"json\",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"(\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\")\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"[\"}),(0,n.jsx)(e.span,{className:\"token string\",children:'\"access_token\"'}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"]\"}),`\n`]})]})}),(0,n.jsxs)(e.h2,{id:\"gathering-data\",children:[(0,n.jsx)(e.a,{href:\"#gathering-data\",\"aria-hidden\":\"true\",tabIndex:\"-1\",children:(0,n.jsx)(e.span,{className:\"icon icon-link\"})}),\"Gathering Data\"]}),(0,n.jsxs)(e.p,{children:[\"Now that I can authenticate, I can ask Adobe to give me information about the metrics and dimensions for a specific report suite. Props and Evars can be found in the \",(0,n.jsx)(e.a,{href:\"https://adobedocs.github.io/analytics-2.0-apis/#/Dimensions\",children:\"dimensions method\"}),\" and Events can be found in the \",(0,n.jsx)(e.a,{href:\"https://adobedocs.github.io/analytics-2.0-apis/#/Metrics/getMetrics\",children:\"Metrics Method\"}),\". These methods both send a lot of data. I my case I only need the basics so I am filtering extraneous things like OOTB metrics, product events, entry/exit props, etc. I am also filtering out unused metrics and dimensions. Therefore, if I see an event, prop, or evar number not in my list, then it is available for use!\"]}),(0,n.jsx)(e.pre,{className:\"language-python\",children:(0,n.jsxs)(e.code,{className:\"language-python code-highlight\",children:[(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"jwt_token \",(0,n.jsx)(e.span,{className:\"token operator\",children:\"=\"}),\" get_jwt\",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"(\"}),\"aa_scope\",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\")\"}),`\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"access_token \",(0,n.jsx)(e.span,{className:\"token operator\",children:\"=\"}),\" get_access_token\",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"(\"}),\"jwt_token\",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\")\"}),`\n`]}),(0,n.jsx)(e.span,{className:\"code-line\",children:`\n`}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"headers \",(0,n.jsx)(e.span,{className:\"token operator\",children:\"=\"}),\" \",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"{\"}),`\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"    \",(0,n.jsx)(e.span,{className:\"token string\",children:'\"accept\"'}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\":\"}),\" \",(0,n.jsx)(e.span,{className:\"token string\",children:'\"application/json\"'}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\",\"}),`\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"    \",(0,n.jsx)(e.span,{className:\"token string\",children:'\"x-proxy-global-company-id\"'}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\":\"}),\" global_company_id\",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\",\"}),`\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"    \",(0,n.jsx)(e.span,{className:\"token string\",children:'\"x-api-key\"'}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\":\"}),\" client_id\",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\",\"}),`\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"    \",(0,n.jsx)(e.span,{className:\"token string\",children:'\"Authorization\"'}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\":\"}),\" \",(0,n.jsxs)(e.span,{className:\"token string-interpolation\",children:[(0,n.jsx)(e.span,{className:\"token string\",children:'f\"Bearer '}),(0,n.jsxs)(e.span,{className:\"token interpolation\",children:[(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"{\"}),\"access_token\",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"}\"})]}),(0,n.jsx)(e.span,{className:\"token string\",children:'\"'})]}),`\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"}\"}),`\n`]}),(0,n.jsx)(e.span,{className:\"code-line\",children:`\n`}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"r \",(0,n.jsx)(e.span,{className:\"token operator\",children:\"=\"}),\" requests\",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\".\"}),\"get\",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"(\"}),(0,n.jsxs)(e.span,{className:\"token string-interpolation\",children:[(0,n.jsx)(e.span,{className:\"token string\",children:'f\"https://analytics.adobe.io/api/'}),(0,n.jsxs)(e.span,{className:\"token interpolation\",children:[(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"{\"}),\"global_company_id\",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"}\"})]}),(0,n.jsx)(e.span,{className:\"token string\",children:\"/dimensions?rsid=\"}),(0,n.jsxs)(e.span,{className:\"token interpolation\",children:[(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"{\"}),\"rsid\",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"}\"})]}),(0,n.jsx)(e.span,{className:\"token string\",children:'\"'})]}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\",\"}),\" headers\",(0,n.jsx)(e.span,{className:\"token operator\",children:\"=\"}),\"headers\",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\")\"}),`\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"dimensions \",(0,n.jsx)(e.span,{className:\"token operator\",children:\"=\"}),\" r\",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\".\"}),\"json\",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"(\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\")\"}),`\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"props \",(0,n.jsx)(e.span,{className:\"token operator\",children:\"=\"}),\" \",(0,n.jsx)(e.span,{className:\"token builtin\",children:\"filter\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"(\"}),(0,n.jsx)(e.span,{className:\"token keyword\",children:\"lambda\"}),\" dimension\",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\":\"}),\" dimension\",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\".\"}),\"get\",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"(\"}),(0,n.jsx)(e.span,{className:\"token string\",children:\"'extraTitleInfo'\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\")\"}),\" \",(0,n.jsx)(e.span,{className:\"token keyword\",children:\"is\"}),\" \",(0,n.jsx)(e.span,{className:\"token keyword\",children:\"not\"}),\" \",(0,n.jsx)(e.span,{className:\"token boolean\",children:\"None\"}),\" \",(0,n.jsx)(e.span,{className:\"token keyword\",children:\"and\"}),\" \",(0,n.jsx)(e.span,{className:\"token string\",children:'\"prop\"'}),\" \",(0,n.jsx)(e.span,{className:\"token keyword\",children:\"in\"}),\" dimension\",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\".\"}),\"get\",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"(\"}),(0,n.jsx)(e.span,{className:\"token string\",children:\"'extraTitleInfo'\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\")\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\",\"}),\" dimensions\",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\")\"}),`\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"filtered_props \",(0,n.jsx)(e.span,{className:\"token operator\",children:\"=\"}),\" \",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"[\"}),\"prop \",(0,n.jsx)(e.span,{className:\"token keyword\",children:\"for\"}),\" prop \",(0,n.jsx)(e.span,{className:\"token keyword\",children:\"in\"}),\" props \",(0,n.jsx)(e.span,{className:\"token keyword\",children:\"if\"}),\" \",(0,n.jsx)(e.span,{className:\"token string\",children:'\"entry\"'}),\" \",(0,n.jsx)(e.span,{className:\"token keyword\",children:\"not\"}),\" \",(0,n.jsx)(e.span,{className:\"token keyword\",children:\"in\"}),\" prop\",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"[\"}),(0,n.jsx)(e.span,{className:\"token string\",children:\"'id'\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"]\"}),\" \",(0,n.jsx)(e.span,{className:\"token keyword\",children:\"and\"}),\" \",(0,n.jsx)(e.span,{className:\"token string\",children:'\"exit\"'}),\" \",(0,n.jsx)(e.span,{className:\"token keyword\",children:\"not\"}),\" \",(0,n.jsx)(e.span,{className:\"token keyword\",children:\"in\"}),\" prop\",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"[\"}),(0,n.jsx)(e.span,{className:\"token string\",children:\"'id'\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"]\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"]\"}),`\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"evars \",(0,n.jsx)(e.span,{className:\"token operator\",children:\"=\"}),\" \",(0,n.jsx)(e.span,{className:\"token builtin\",children:\"filter\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"(\"}),(0,n.jsx)(e.span,{className:\"token keyword\",children:\"lambda\"}),\" dimension\",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\":\"}),\" dimension\",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\".\"}),\"get\",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"(\"}),(0,n.jsx)(e.span,{className:\"token string\",children:\"'extraTitleInfo'\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\")\"}),\" \",(0,n.jsx)(e.span,{className:\"token keyword\",children:\"is\"}),\" \",(0,n.jsx)(e.span,{className:\"token keyword\",children:\"not\"}),\" \",(0,n.jsx)(e.span,{className:\"token boolean\",children:\"None\"}),\" \",(0,n.jsx)(e.span,{className:\"token keyword\",children:\"and\"}),\" \",(0,n.jsx)(e.span,{className:\"token string\",children:'\"evar\"'}),\" \",(0,n.jsx)(e.span,{className:\"token keyword\",children:\"in\"}),\" dimension\",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\".\"}),\"get\",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"(\"}),(0,n.jsx)(e.span,{className:\"token string\",children:\"'extraTitleInfo'\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\")\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\",\"}),\" dimensions\",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\")\"}),`\n`]}),(0,n.jsx)(e.span,{className:\"code-line\",children:`\n`}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[(0,n.jsx)(e.span,{className:\"token comment\",children:\"# order props in numerical order\"}),`\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[(0,n.jsx)(e.span,{className:\"token keyword\",children:\"def\"}),\" \",(0,n.jsx)(e.span,{className:\"token function\",children:\"order_nums\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"(\"}),\"dimension\",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\")\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\":\"}),`\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"    \",(0,n.jsx)(e.span,{className:\"token builtin\",children:\"id\"}),\" \",(0,n.jsx)(e.span,{className:\"token operator\",children:\"=\"}),\" dimension\",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\".\"}),\"get\",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"(\"}),(0,n.jsx)(e.span,{className:\"token string\",children:\"'id'\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\")\"}),`\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"    regex \",(0,n.jsx)(e.span,{className:\"token operator\",children:\"=\"}),\" \",(0,n.jsx)(e.span,{className:\"token string\",children:'r\"\\\\d+\"'}),`\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"    \",(0,n.jsx)(e.span,{className:\"token keyword\",children:\"return\"}),\" \",(0,n.jsx)(e.span,{className:\"token builtin\",children:\"int\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"(\"}),\"re\",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\".\"}),\"findall\",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"(\"}),\"regex\",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\",\"}),(0,n.jsx)(e.span,{className:\"token builtin\",children:\"id\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\")\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\".\"}),\"pop\",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"(\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\")\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\")\"}),`\n`]}),(0,n.jsx)(e.span,{className:\"code-line\",children:`\n`}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"filtered_props\",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\".\"}),\"sort\",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"(\"}),\"key\",(0,n.jsx)(e.span,{className:\"token operator\",children:\"=\"}),\"order_nums\",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\")\"}),`\n`]}),(0,n.jsx)(e.span,{className:\"code-line\",children:`\n`}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[(0,n.jsx)(e.span,{className:\"token comment\",children:\"# for prop in filtered_props:\"}),`\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"    \",(0,n.jsx)(e.span,{className:\"token comment\",children:\"# print(prop)\"}),`\n`]}),(0,n.jsx)(e.span,{className:\"code-line\",children:`\n`}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"    \",(0,n.jsx)(e.span,{className:\"token comment\",children:\"# returns:\"}),`\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"    \",(0,n.jsx)(e.span,{className:\"token comment\",children:\"# {'id': 'variables/prop1', 'title': 'pagename', 'name': 'pagename', 'type': 'string', .....\"}),`\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"    \",(0,n.jsx)(e.span,{className:\"token comment\",children:\"# {'id': 'variables/prop2', 'title': 'username', 'name': 'username', 'type': 'string', .....\"}),`\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"    \",(0,n.jsx)(e.span,{className:\"token comment\",children:\"# {'id': 'variables/prop3', 'title': 'url', 'name': 'url', 'type': 'string', .....\"}),`\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"    \",(0,n.jsx)(e.span,{className:\"token comment\",children:\"# etc etc\"}),`\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"    \",(0,n.jsx)(e.span,{className:\"token comment\",children:\"# similar output for evars\"}),`\n`]}),(0,n.jsx)(e.span,{className:\"code-line\",children:`\n`}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"m \",(0,n.jsx)(e.span,{className:\"token operator\",children:\"=\"}),\" requests\",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\".\"}),\"get\",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"(\"}),(0,n.jsxs)(e.span,{className:\"token string-interpolation\",children:[(0,n.jsx)(e.span,{className:\"token string\",children:'f\"https://analytics.adobe.io/api/'}),(0,n.jsxs)(e.span,{className:\"token interpolation\",children:[(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"{\"}),\"global_company_id\",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"}\"})]}),(0,n.jsx)(e.span,{className:\"token string\",children:\"/metrics?rsid=\"}),(0,n.jsxs)(e.span,{className:\"token interpolation\",children:[(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"{\"}),\"rsid\",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"}\"})]}),(0,n.jsx)(e.span,{className:\"token string\",children:'\"'})]}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\",\"}),\" headers\",(0,n.jsx)(e.span,{className:\"token operator\",children:\"=\"}),\"headers\",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\")\"}),`\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"metrics \",(0,n.jsx)(e.span,{className:\"token operator\",children:\"=\"}),\" m\",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\".\"}),\"json\",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"(\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\")\"}),`\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"events \",(0,n.jsx)(e.span,{className:\"token operator\",children:\"=\"}),\" \",(0,n.jsx)(e.span,{className:\"token builtin\",children:\"list\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"(\"}),(0,n.jsx)(e.span,{className:\"token builtin\",children:\"filter\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"(\"}),(0,n.jsx)(e.span,{className:\"token keyword\",children:\"lambda\"}),\" event\",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\":\"}),\" event\",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\".\"}),\"get\",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"(\"}),(0,n.jsx)(e.span,{className:\"token string\",children:'\"extraTitleInfo\"'}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\")\"}),\" \",(0,n.jsx)(e.span,{className:\"token keyword\",children:\"is\"}),\" \",(0,n.jsx)(e.span,{className:\"token keyword\",children:\"not\"}),\" \",(0,n.jsx)(e.span,{className:\"token boolean\",children:\"None\"}),\" \",(0,n.jsx)(e.span,{className:\"token keyword\",children:\"and\"}),\" \",(0,n.jsx)(e.span,{className:\"token string\",children:'\"event\"'}),\" \",(0,n.jsx)(e.span,{className:\"token keyword\",children:\"in\"}),\" event\",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\".\"}),\"get\",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"(\"}),(0,n.jsx)(e.span,{className:\"token string\",children:'\"extraTitleInfo\"'}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\")\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\",\"}),\" metrics\",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\")\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\")\"}),`\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"events\",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\".\"}),\"sort\",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"(\"}),\"key\",(0,n.jsx)(e.span,{className:\"token operator\",children:\"=\"}),\"order_nums\",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\")\"}),`\n`]}),(0,n.jsx)(e.span,{className:\"code-line\",children:`\n`}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[(0,n.jsx)(e.span,{className:\"token comment\",children:\"# for event in events:\"}),`\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"    \",(0,n.jsx)(e.span,{className:\"token comment\",children:\"# print(event)\"}),`\n`]}),(0,n.jsx)(e.span,{className:\"code-line\",children:`\n`}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"    \",(0,n.jsx)(e.span,{className:\"token comment\",children:\"# returns:\"}),`\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"    \",(0,n.jsx)(e.span,{className:\"token comment\",children:\"# {'id': 'metrics/event1', 'title': 'Pageview', 'name': 'Pageview', 'type': 'int', 'extraTitleInfo': 'event1',....\"}),`\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"    \",(0,n.jsx)(e.span,{className:\"token comment\",children:\"# {'id': 'metrics/event2', 'title': 'Login', 'name': 'Login', 'type': 'int', 'extraTitleInfo': 'event2', ....\"}),`\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"    \",(0,n.jsx)(e.span,{className:\"token comment\",children:\"# {'id': 'metrics/event3', 'title': 'Click', 'name': 'Click', 'type': 'int', 'extraTitleInfo': 'event3', ....\"}),`\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"    \",(0,n.jsx)(e.span,{className:\"token comment\",children:\"# etc etc\"}),`\n`]})]})}),(0,n.jsx)(e.hr,{}),(0,n.jsxs)(e.h2,{id:\"building-markdown\",children:[(0,n.jsx)(e.a,{href:\"#building-markdown\",\"aria-hidden\":\"true\",tabIndex:\"-1\",children:(0,n.jsx)(e.span,{className:\"icon icon-link\"})}),\"Building Markdown\"]}),(0,n.jsxs)(e.p,{children:[\"Markdown is great because it allows you to build HTML elements with a simplified syntax. However, you can also mix and match standard HTML elements should the need arise. Python is great because you can programmatically build markdown files. What I am going to do here is essentially build a giant string of markdown step by step with all my data then save the entire string to a file. An important thing to remember is that Markdown takes whitespace into account between elements; hence my use of \",(0,n.jsx)(e.a,{href:\"https://www.w3schools.com/python/gloss_python_multi_line_strings.asp\",children:\"multi-line strings\"}),\". If things come out looking funky, make sure your spacing is correct. First lets start with a head section. \",(0,n.jsx)(e.em,{children:\"I will address the functionality of the search bar later\"})]}),(0,n.jsx)(e.pre,{className:\"language-python\",children:(0,n.jsxs)(e.code,{className:\"language-python code-highlight\",children:[(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"last_update \",(0,n.jsx)(e.span,{className:\"token operator\",children:\"=\"}),\" datetime\",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\".\"}),\"datetime\",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\".\"}),\"now\",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"(\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\")\"}),\" \",(0,n.jsx)(e.span,{className:\"token operator\",children:\"-\"}),\" datetime\",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\".\"}),\"timedelta\",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"(\"}),\"hours\",(0,n.jsx)(e.span,{className:\"token operator\",children:\"=\"}),(0,n.jsx)(e.span,{className:\"token number\",children:\"4\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\")\"}),\" \",(0,n.jsx)(e.span,{className:\"token comment\",children:\"# adjust for utc time of automation server\"}),`\n`]}),(0,n.jsx)(e.span,{className:\"code-line\",children:`\n`}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"output \",(0,n.jsx)(e.span,{className:\"token operator\",children:\"=\"}),\" \",(0,n.jsx)(e.span,{className:\"token string-interpolation\",children:(0,n.jsx)(e.span,{className:\"token string\",children:`f\"\"\"\n`})})]}),(0,n.jsx)(e.span,{className:\"code-line\",children:(0,n.jsx)(e.span,{className:\"token string-interpolation\",children:(0,n.jsx)(e.span,{className:\"token string\",children:`# Adobe Analytics Events and Dimensions\n`})})}),(0,n.jsx)(e.span,{className:\"code-line\",children:(0,n.jsx)(e.span,{className:\"token string-interpolation\",children:(0,n.jsx)(e.span,{className:\"token string\",children:`<br>\n`})})}),(0,n.jsx)(e.span,{className:\"code-line\",children:(0,n.jsxs)(e.span,{className:\"token string-interpolation\",children:[(0,n.jsx)(e.span,{className:\"token string\",children:\"*Last Updated: \"}),(0,n.jsxs)(e.span,{className:\"token interpolation\",children:[(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"{\"}),\"last_update\",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\".\"}),\"strftime\",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"(\"}),(0,n.jsx)(e.span,{className:\"token string\",children:'\"%x - %X\"'}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\")\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"}\"})]}),(0,n.jsx)(e.span,{className:\"token string\",children:`*\n`})]})}),(0,n.jsx)(e.span,{className:\"code-line\",children:(0,n.jsx)(e.span,{className:\"token string-interpolation\",children:(0,n.jsx)(e.span,{className:\"token string\",children:`<div id=\"variablesearch\">\n`})})}),(0,n.jsx)(e.span,{className:\"code-line\",children:(0,n.jsx)(e.span,{className:\"token string-interpolation\",children:(0,n.jsx)(e.span,{className:\"token string\",children:`    <input name=\"search\" placeholder=\"Search\" value=\"\">\n`})})}),(0,n.jsx)(e.span,{className:\"code-line\",children:(0,n.jsx)(e.span,{className:\"token string-interpolation\",children:(0,n.jsx)(e.span,{className:\"token string\",children:`</div>\n`})})}),(0,n.jsx)(e.span,{className:\"code-line\",children:(0,n.jsx)(e.span,{className:\"token string-interpolation\",children:(0,n.jsx)(e.span,{className:\"token string\",children:`\n`})})}),(0,n.jsx)(e.span,{className:\"code-line\",children:(0,n.jsxs)(e.span,{className:\"token string-interpolation\",children:[(0,n.jsx)(e.span,{className:\"token string\",children:\"## Report Suite: \"}),(0,n.jsxs)(e.span,{className:\"token interpolation\",children:[(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"{\"}),\"rsid\",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"}\"})]}),(0,n.jsx)(e.span,{className:\"token string\",children:`\n`})]})}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[(0,n.jsx)(e.span,{className:\"token string-interpolation\",children:(0,n.jsx)(e.span,{className:\"token string\",children:'<hr>\"\"\"'})}),`\n`]})]})}),(0,n.jsx)(e.p,{children:(0,n.jsx)(e.img,{alt:\"building markdown\",src:\"https://images.ctfassets.net/on47yk52ubpi/7qsCfG6vPziOarRpCbeJfP/e2be1c671491cf79bb23cc3912b2565a/1_JKDc94U-szKMF_Za6mTsWg.webp\"})}),(0,n.jsx)(\"figure\",{children:(0,n.jsx)(\"figcaption\",{children:\"Generated Markdown\"})}),(0,n.jsx)(e.p,{children:\"Since I already have all the data I need from the API, all thats left is to make it presentable. I\\u2019ll use Markdown tables for this. The gist is: setup the heading for the table, loop through my Adobe data to create table rows, add some spacing for the next table, repeat. There will be 3 tables: props, evars, and events. Remember that I am creating a giant string of markdown, so when adding the tables I am adding to the output string I already created in the heading section.\"}),(0,n.jsx)(e.pre,{className:\"language-python\",children:(0,n.jsxs)(e.code,{className:\"language-python code-highlight\",children:[(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"output \",(0,n.jsx)(e.span,{className:\"token operator\",children:\"+=\"}),\" \",(0,n.jsx)(e.span,{className:\"token string triple-quoted-string\",children:`\"\"\"\n`})]}),(0,n.jsx)(e.span,{className:\"code-line\",children:(0,n.jsx)(e.span,{className:\"token string triple-quoted-string\",children:`### Props\n`})}),(0,n.jsx)(e.span,{className:\"code-line\",children:(0,n.jsx)(e.span,{className:\"token string triple-quoted-string\",children:`| Number | Name | Description |\n`})}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[(0,n.jsx)(e.span,{className:\"token string triple-quoted-string\",children:'|----------|----------|----------|\"\"\"'}),`\n`]}),(0,n.jsx)(e.span,{className:\"code-line\",children:`\n`}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[(0,n.jsx)(e.span,{className:\"token keyword\",children:\"for\"}),\" p \",(0,n.jsx)(e.span,{className:\"token keyword\",children:\"in\"}),\" filtered_props\",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\":\"}),`\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"    description \",(0,n.jsx)(e.span,{className:\"token operator\",children:\"=\"}),\" p\",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\".\"}),\"get\",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"(\"}),(0,n.jsx)(e.span,{className:\"token string\",children:\"'description'\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\")\"}),`\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"    \",(0,n.jsx)(e.span,{className:\"token comment\",children:\"# descriptions come with weird formatting sometimes...\"}),`\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"    \",(0,n.jsx)(e.span,{className:\"token keyword\",children:\"if\"}),\" description\",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\":\"}),`\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"        description \",(0,n.jsx)(e.span,{className:\"token operator\",children:\"=\"}),\" description\",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\".\"}),\"strip\",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"(\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\")\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\".\"}),\"replace\",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"(\"}),(0,n.jsx)(e.span,{className:\"token string\",children:'\"\\\\r\"'}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\",\"}),\" \",(0,n.jsx)(e.span,{className:\"token string\",children:'\" \"'}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\")\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\".\"}),\"replace\",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"(\"}),(0,n.jsx)(e.span,{className:\"token string\",children:'\"\\\\n\"'}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\",\"}),\" \",(0,n.jsx)(e.span,{className:\"token string\",children:'\" \"'}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\")\"}),`\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"    \",(0,n.jsx)(e.span,{className:\"token builtin\",children:\"id\"}),\" \",(0,n.jsx)(e.span,{className:\"token operator\",children:\"=\"}),\" p\",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\".\"}),\"get\",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"(\"}),(0,n.jsx)(e.span,{className:\"token string\",children:\"'id'\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\")\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\".\"}),\"replace\",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"(\"}),(0,n.jsx)(e.span,{className:\"token string\",children:'\"variables/\"'}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\",\"}),\" \",(0,n.jsx)(e.span,{className:\"token string\",children:'\"\"'}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\")\"}),`\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"    name \",(0,n.jsx)(e.span,{className:\"token operator\",children:\"=\"}),\" p\",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\".\"}),\"get\",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"(\"}),(0,n.jsx)(e.span,{className:\"token string\",children:\"'name'\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\")\"}),`\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"    output \",(0,n.jsx)(e.span,{className:\"token operator\",children:\"+=\"}),\" \",(0,n.jsxs)(e.span,{className:\"token string-interpolation\",children:[(0,n.jsx)(e.span,{className:\"token string\",children:'f\"\\\\n|'}),(0,n.jsxs)(e.span,{className:\"token interpolation\",children:[(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"{\"}),(0,n.jsx)(e.span,{className:\"token builtin\",children:\"id\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"}\"})]}),(0,n.jsx)(e.span,{className:\"token string\",children:\" | \"}),(0,n.jsxs)(e.span,{className:\"token interpolation\",children:[(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"{\"}),\"name\",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"}\"})]}),(0,n.jsx)(e.span,{className:\"token string\",children:\" | \"}),(0,n.jsxs)(e.span,{className:\"token interpolation\",children:[(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"{\"}),\"description\",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"}\"})]}),(0,n.jsx)(e.span,{className:\"token string\",children:'\"'})]}),`\n`]}),(0,n.jsx)(e.span,{className:\"code-line\",children:`\n`}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[(0,n.jsx)(e.span,{className:\"token comment\",children:\"# remember to add spacing between elements in markdown\"}),`\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"output \",(0,n.jsx)(e.span,{className:\"token operator\",children:\"+=\"}),\" \",(0,n.jsx)(e.span,{className:\"token string\",children:'\"\\\\n\"'}),`\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"output \",(0,n.jsx)(e.span,{className:\"token operator\",children:\"+=\"}),\" \",(0,n.jsx)(e.span,{className:\"token string triple-quoted-string\",children:`\"\"\"\n`})]}),(0,n.jsx)(e.span,{className:\"code-line\",children:(0,n.jsx)(e.span,{className:\"token string triple-quoted-string\",children:`\n`})}),(0,n.jsx)(e.span,{className:\"code-line\",children:(0,n.jsx)(e.span,{className:\"token string triple-quoted-string\",children:`### Evars\n`})}),(0,n.jsx)(e.span,{className:\"code-line\",children:(0,n.jsx)(e.span,{className:\"token string triple-quoted-string\",children:`\n`})}),(0,n.jsx)(e.span,{className:\"code-line\",children:(0,n.jsx)(e.span,{className:\"token string triple-quoted-string\",children:`| Number | Name | Description |\n`})}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[(0,n.jsx)(e.span,{className:\"token string triple-quoted-string\",children:'|----------|----------|----------|\"\"\"'}),`\n`]}),(0,n.jsx)(e.span,{className:\"code-line\",children:`\n`}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[(0,n.jsx)(e.span,{className:\"token keyword\",children:\"for\"}),\" e \",(0,n.jsx)(e.span,{className:\"token keyword\",children:\"in\"}),\" evars\",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\":\"}),`\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"    description \",(0,n.jsx)(e.span,{className:\"token operator\",children:\"=\"}),\" e\",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\".\"}),\"get\",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"(\"}),(0,n.jsx)(e.span,{className:\"token string\",children:\"'description'\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\")\"}),`\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"    \",(0,n.jsx)(e.span,{className:\"token keyword\",children:\"if\"}),\" description\",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\":\"}),`\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"        description \",(0,n.jsx)(e.span,{className:\"token operator\",children:\"=\"}),\" description\",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\".\"}),\"strip\",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"(\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\")\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\".\"}),\"replace\",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"(\"}),(0,n.jsx)(e.span,{className:\"token string\",children:'\"\\\\r\"'}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\",\"}),\" \",(0,n.jsx)(e.span,{className:\"token string\",children:'\" \"'}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\")\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\".\"}),\"replace\",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"(\"}),(0,n.jsx)(e.span,{className:\"token string\",children:'\"\\\\n\"'}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\",\"}),\" \",(0,n.jsx)(e.span,{className:\"token string\",children:'\" \"'}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\")\"}),`\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"    \",(0,n.jsx)(e.span,{className:\"token builtin\",children:\"id\"}),\" \",(0,n.jsx)(e.span,{className:\"token operator\",children:\"=\"}),\" e\",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\".\"}),\"get\",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"(\"}),(0,n.jsx)(e.span,{className:\"token string\",children:\"'id'\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\")\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\".\"}),\"replace\",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"(\"}),(0,n.jsx)(e.span,{className:\"token string\",children:'\"variables/\"'}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\",\"}),\" \",(0,n.jsx)(e.span,{className:\"token string\",children:'\"\"'}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\")\"}),`\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"    name \",(0,n.jsx)(e.span,{className:\"token operator\",children:\"=\"}),\" e\",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\".\"}),\"get\",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"(\"}),(0,n.jsx)(e.span,{className:\"token string\",children:\"'name'\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\")\"}),`\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"    output \",(0,n.jsx)(e.span,{className:\"token operator\",children:\"+=\"}),\" \",(0,n.jsxs)(e.span,{className:\"token string-interpolation\",children:[(0,n.jsx)(e.span,{className:\"token string\",children:'f\"\\\\n|'}),(0,n.jsxs)(e.span,{className:\"token interpolation\",children:[(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"{\"}),(0,n.jsx)(e.span,{className:\"token builtin\",children:\"id\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"}\"})]}),(0,n.jsx)(e.span,{className:\"token string\",children:\"|\"}),(0,n.jsxs)(e.span,{className:\"token interpolation\",children:[(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"{\"}),\"name\",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"}\"})]}),(0,n.jsx)(e.span,{className:\"token string\",children:\"|\"}),(0,n.jsxs)(e.span,{className:\"token interpolation\",children:[(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"{\"}),\"description\",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"}\"})]}),(0,n.jsx)(e.span,{className:\"token string\",children:'|\"'})]}),`\n`]}),(0,n.jsx)(e.span,{className:\"code-line\",children:`\n`}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"output \",(0,n.jsx)(e.span,{className:\"token operator\",children:\"+=\"}),\" \",(0,n.jsx)(e.span,{className:\"token string\",children:'\"\\\\n\"'}),`\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"output \",(0,n.jsx)(e.span,{className:\"token operator\",children:\"+=\"}),\" \",(0,n.jsx)(e.span,{className:\"token string triple-quoted-string\",children:`\"\"\"\n`})]}),(0,n.jsx)(e.span,{className:\"code-line\",children:(0,n.jsx)(e.span,{className:\"token string triple-quoted-string\",children:`\n`})}),(0,n.jsx)(e.span,{className:\"code-line\",children:(0,n.jsx)(e.span,{className:\"token string triple-quoted-string\",children:`### Events\n`})}),(0,n.jsx)(e.span,{className:\"code-line\",children:(0,n.jsx)(e.span,{className:\"token string triple-quoted-string\",children:`\n`})}),(0,n.jsx)(e.span,{className:\"code-line\",children:(0,n.jsx)(e.span,{className:\"token string triple-quoted-string\",children:`| Number | Name | Description |\n`})}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[(0,n.jsx)(e.span,{className:\"token string triple-quoted-string\",children:'|----------|----------|----------|\"\"\"'}),`\n`]}),(0,n.jsx)(e.span,{className:\"code-line\",children:`\n`}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[(0,n.jsx)(e.span,{className:\"token keyword\",children:\"for\"}),\" e \",(0,n.jsx)(e.span,{className:\"token keyword\",children:\"in\"}),\" \",(0,n.jsx)(e.span,{className:\"token builtin\",children:\"list\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"(\"}),\"events\",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\")\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\":\"}),`\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"    description \",(0,n.jsx)(e.span,{className:\"token operator\",children:\"=\"}),\" e\",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\".\"}),\"get\",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"(\"}),(0,n.jsx)(e.span,{className:\"token string\",children:\"'description'\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\")\"}),`\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"    \",(0,n.jsx)(e.span,{className:\"token keyword\",children:\"if\"}),\" description\",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\":\"}),`\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"        description \",(0,n.jsx)(e.span,{className:\"token operator\",children:\"=\"}),\" description\",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\".\"}),\"strip\",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"(\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\")\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\".\"}),\"replace\",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"(\"}),(0,n.jsx)(e.span,{className:\"token string\",children:'\"\\\\r\"'}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\",\"}),\" \",(0,n.jsx)(e.span,{className:\"token string\",children:'\" \"'}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\")\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\".\"}),\"replace\",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"(\"}),(0,n.jsx)(e.span,{className:\"token string\",children:'\"\\\\n\"'}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\",\"}),\" \",(0,n.jsx)(e.span,{className:\"token string\",children:'\" \"'}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\")\"}),`\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"    \",(0,n.jsx)(e.span,{className:\"token builtin\",children:\"id\"}),\" \",(0,n.jsx)(e.span,{className:\"token operator\",children:\"=\"}),\" e\",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\".\"}),\"get\",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"(\"}),(0,n.jsx)(e.span,{className:\"token string\",children:\"'id'\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\")\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\".\"}),\"replace\",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"(\"}),(0,n.jsx)(e.span,{className:\"token string\",children:'\"metrics/\"'}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\",\"}),\" \",(0,n.jsx)(e.span,{className:\"token string\",children:'\"\"'}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\")\"}),`\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"    name \",(0,n.jsx)(e.span,{className:\"token operator\",children:\"=\"}),\" e\",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\".\"}),\"get\",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"(\"}),(0,n.jsx)(e.span,{className:\"token string\",children:\"'name'\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\")\"}),`\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"    output \",(0,n.jsx)(e.span,{className:\"token operator\",children:\"+=\"}),\" \",(0,n.jsxs)(e.span,{className:\"token string-interpolation\",children:[(0,n.jsx)(e.span,{className:\"token string\",children:'f\"\\\\n|'}),(0,n.jsxs)(e.span,{className:\"token interpolation\",children:[(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"{\"}),(0,n.jsx)(e.span,{className:\"token builtin\",children:\"id\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"}\"})]}),(0,n.jsx)(e.span,{className:\"token string\",children:\"|\"}),(0,n.jsxs)(e.span,{className:\"token interpolation\",children:[(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"{\"}),\"name\",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"}\"})]}),(0,n.jsx)(e.span,{className:\"token string\",children:\"|\"}),(0,n.jsxs)(e.span,{className:\"token interpolation\",children:[(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"{\"}),\"description\",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"}\"})]}),(0,n.jsx)(e.span,{className:\"token string\",children:'|\"'})]}),`\n`]})]})}),(0,n.jsx)(e.p,{children:(0,n.jsx)(e.img,{alt:\"static outuput\",src:\"https://images.ctfassets.net/on47yk52ubpi/6gC7J65yYtbxEomc2WaAy0/d97d530ec78976cc5f3d3c4c09026b6c/1_tY45-kPLBT7BiiOUyPRd1g.webp\"})}),(0,n.jsx)(\"figure\",{children:(0,n.jsx)(\"figcaption\",{children:(0,n.jsx)(e.p,{children:\"These are all fake, but this is the exact output format I want. This is also truncated for brevity. A real report suite will likely have hundreds of rows.\"})})}),(0,n.jsx)(e.hr,{}),(0,n.jsxs)(e.h2,{id:\"style--search\",children:[(0,n.jsx)(e.a,{href:\"#style--search\",\"aria-hidden\":\"true\",tabIndex:\"-1\",children:(0,n.jsx)(e.span,{className:\"icon icon-link\"})}),\"Style & Search\"]}),(0,n.jsx)(e.p,{children:\"When there are hundreds of rows the table needs some color to break it up. You can add styling to the output in plain HTML since markdown is interpreted by the browser as HTML (the markdown tables become regular HTML tables with columns, rows, etc.). I\\u2019ll color every other row just to make it so this thing isn\\u2019t a wall of text.\"}),(0,n.jsx)(e.pre,{className:\"language-python\",children:(0,n.jsxs)(e.code,{className:\"language-python code-highlight\",children:[(0,n.jsxs)(e.span,{className:\"code-line\",children:[(0,n.jsx)(e.span,{className:\"token comment\",children:\"# CSS\"}),`\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"output \",(0,n.jsx)(e.span,{className:\"token operator\",children:\"+=\"}),\" \",(0,n.jsx)(e.span,{className:\"token string triple-quoted-string\",children:`\"\"\"\n`})]}),(0,n.jsx)(e.span,{className:\"code-line\",children:(0,n.jsx)(e.span,{className:\"token string triple-quoted-string\",children:`<style>\n`})}),(0,n.jsx)(e.span,{className:\"code-line\",children:(0,n.jsx)(e.span,{className:\"token string triple-quoted-string\",children:`    tr:nth-child(even) {\n`})}),(0,n.jsx)(e.span,{className:\"code-line\",children:(0,n.jsx)(e.span,{className:\"token string triple-quoted-string\",children:`        background-color:#ECECEC !important;\n`})}),(0,n.jsx)(e.span,{className:\"code-line\",children:(0,n.jsx)(e.span,{className:\"token string triple-quoted-string\",children:`    }\n`})}),(0,n.jsx)(e.span,{className:\"code-line\",children:(0,n.jsx)(e.span,{className:\"token string triple-quoted-string\",children:`</style>\n`})}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[(0,n.jsx)(e.span,{className:\"token string triple-quoted-string\",children:'\"\"\"'}),`\n`]})]})}),(0,n.jsx)(e.p,{children:(0,n.jsx)(e.img,{alt:\"style rows\",src:\"https://images.ctfassets.net/on47yk52ubpi/42v50YAkTlqh55yOmAOe74/dabe39bd9f2b714e4badd039ba8f9daf/1_xsB1269m6BRlp6F4YqYNDg.webp\"})}),(0,n.jsx)(\"figure\",{children:(0,n.jsx)(\"figcaption\",{children:(0,n.jsx)(e.p,{children:\"You can apply any style to Markdown just as you would regular HTML elements\"})})}),(0,n.jsxs)(e.p,{children:[\"To make this table \",(0,n.jsx)(e.em,{children:\"searchable\"}),\" (and actually useful) I need to add a little JS. Once I have it working as expected, I can append it to my markdown string, just like every other element, to have it added to the final output file. Again, since markdown converts into regular HTML you can write javascript to manipulate it. Here, when someone types in the search box, the table will begin filtering for those characters. If there is match in the number, name, or description, it will show only those rows. This is why my search bar element has an HTML id of \",(0,n.jsx)(e.em,{children:\"variablesearch\"}),\".\"]}),(0,n.jsxs)(e.p,{children:[\"'Now when someone asks me \",(0,n.jsx)(e.em,{children:\"\\u201CHey what does event57 mean?\\u201D\"}),\" I can say \",(0,n.jsx)(e.em,{children:\"\\u201CGo check the Adobe Variable grid!\\u201D\"})]}),(0,n.jsx)(e.pre,{className:\"language-python\",children:(0,n.jsxs)(e.code,{className:\"language-python code-highlight\",children:[(0,n.jsxs)(e.span,{className:\"code-line\",children:[(0,n.jsx)(e.span,{className:\"token comment\",children:\"# Javascript\"}),`\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"output \",(0,n.jsx)(e.span,{className:\"token operator\",children:\"+=\"}),\" \",(0,n.jsx)(e.span,{className:\"token string triple-quoted-string\",children:`\"\"\"\n`})]}),(0,n.jsx)(e.span,{className:\"code-line\",children:(0,n.jsx)(e.span,{className:\"token string triple-quoted-string\",children:`<script>\n`})}),(0,n.jsx)(e.span,{className:\"code-line\",children:(0,n.jsx)(e.span,{className:\"token string triple-quoted-string\",children:`    document\n`})}),(0,n.jsx)(e.span,{className:\"code-line\",children:(0,n.jsx)(e.span,{className:\"token string triple-quoted-string\",children:`      .querySelector('#variablesearch input')\n`})}),(0,n.jsx)(e.span,{className:\"code-line\",children:(0,n.jsx)(e.span,{className:\"token string triple-quoted-string\",children:`      .addEventListener('keyup', (event) => {\n`})}),(0,n.jsx)(e.span,{className:\"code-line\",children:(0,n.jsx)(e.span,{className:\"token string triple-quoted-string\",children:`        let query = event.target.value.toLowerCase();\n`})}),(0,n.jsx)(e.span,{className:\"code-line\",children:(0,n.jsx)(e.span,{className:\"token string triple-quoted-string\",children:`        let tds = Array.from(document.querySelectorAll('td'));\n`})}),(0,n.jsx)(e.span,{className:\"code-line\",children:(0,n.jsx)(e.span,{className:\"token string triple-quoted-string\",children:`        let filtered_tds = tds.filter((td) =>\n`})}),(0,n.jsx)(e.span,{className:\"code-line\",children:(0,n.jsx)(e.span,{className:\"token string triple-quoted-string\",children:`          td.innerText.toLowerCase().includes(query)\n`})}),(0,n.jsx)(e.span,{className:\"code-line\",children:(0,n.jsx)(e.span,{className:\"token string triple-quoted-string\",children:`        );\n`})}),(0,n.jsx)(e.span,{className:\"code-line\",children:(0,n.jsx)(e.span,{className:\"token string triple-quoted-string\",children:`        tds.forEach(\n`})}),(0,n.jsx)(e.span,{className:\"code-line\",children:(0,n.jsx)(e.span,{className:\"token string triple-quoted-string\",children:`          (element) => (element.parentElement.style.display = 'none')\n`})}),(0,n.jsx)(e.span,{className:\"code-line\",children:(0,n.jsx)(e.span,{className:\"token string triple-quoted-string\",children:`        );\n`})}),(0,n.jsx)(e.span,{className:\"code-line\",children:(0,n.jsx)(e.span,{className:\"token string triple-quoted-string\",children:`        filtered_tds.forEach((element) => {\n`})}),(0,n.jsx)(e.span,{className:\"code-line\",children:(0,n.jsx)(e.span,{className:\"token string triple-quoted-string\",children:`          element.parentElement.style.display = '';\n`})}),(0,n.jsx)(e.span,{className:\"code-line\",children:(0,n.jsx)(e.span,{className:\"token string triple-quoted-string\",children:`        });\n`})}),(0,n.jsx)(e.span,{className:\"code-line\",children:(0,n.jsx)(e.span,{className:\"token string triple-quoted-string\",children:`      });\n`})}),(0,n.jsx)(e.span,{className:\"code-line\",children:(0,n.jsx)(e.span,{className:\"token string triple-quoted-string\",children:`<\\/script>\n`})}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[(0,n.jsx)(e.span,{className:\"token string triple-quoted-string\",children:'\"\"\"'}),`\n`]})]})}),(0,n.jsx)(e.p,{children:(0,n.jsx)(e.img,{alt:\"demo gif\",src:\"https://images.ctfassets.net/on47yk52ubpi/1TrQCpsMRF7RET07TOdkvP/7ffe8bfcc1df39b08687c1b0ee406fe4/1_ui_iwDDm_LB7EuApCl9u8w.gif\"})}),(0,n.jsx)(\"figure\",{children:(0,n.jsx)(\"figcaption\",{children:\"Now I can search all my events and dimensions by name and description!\"})}),(0,n.jsxs)(e.h2,{id:\"saving-the-string-as-a-file\",children:[(0,n.jsx)(e.a,{href:\"#saving-the-string-as-a-file\",\"aria-hidden\":\"true\",tabIndex:\"-1\",children:(0,n.jsx)(e.span,{className:\"icon icon-link\"})}),\"Saving the string as a file\"]}),(0,n.jsx)(e.p,{children:\"Now that I have all the markdown and HTML code I need in a single string, I need to save that string as a file. If this file doesn\\u2019t exist, it will be created. If it does exist, it will be overwritten with the newest data.\"}),(0,n.jsx)(e.pre,{className:\"language-python\",children:(0,n.jsxs)(e.code,{className:\"language-python code-highlight\",children:[(0,n.jsxs)(e.span,{className:\"code-line\",children:[(0,n.jsx)(e.span,{className:\"token keyword\",children:\"with\"}),\" \",(0,n.jsx)(e.span,{className:\"token builtin\",children:\"open\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"(\"}),(0,n.jsx)(e.span,{className:\"token string\",children:\"'adobevargrid.md'\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\",\"}),\" \",(0,n.jsx)(e.span,{className:\"token string\",children:\"'w'\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\")\"}),\" \",(0,n.jsx)(e.span,{className:\"token keyword\",children:\"as\"}),\" f\",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\":\"}),`\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"    f\",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\".\"}),\"write\",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"(\"}),\"output\",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\")\"}),`\n`]})]})}),(0,n.jsx)(e.hr,{}),(0,n.jsxs)(e.h2,{id:\"automation\",children:[(0,n.jsx)(e.a,{href:\"#automation\",\"aria-hidden\":\"true\",tabIndex:\"-1\",children:(0,n.jsx)(e.span,{className:\"icon icon-link\"})}),\"Automation\"]}),(0,n.jsxs)(e.p,{children:[\"The page is \\u201Cdone\\u201D technically, but I don\\u2019t want to have to update it manually every time I (or any of the other admins in my Adobe Organization) make a change to our metrics and dimensions. I would like this page to be as accurate and up to date as possible. Because Github pages will deploy the latest version of my Markdown file (\",(0,n.jsx)(e.em,{children:\"adobevargrid.md\"}),\") as a page whenever I push a change, I can keep this page up to date by programmatically running the running the script (\",(0,n.jsx)(e.em,{children:\"app.py\"}),\" which generates \",(0,n.jsx)(e.em,{children:\"adobevargrid.md\"}),\") and programmatically pushing the latest file to Github.\"]}),(0,n.jsxs)(e.p,{children:[\"There are a couple different options here depending on how comfortable you are with the command line and/or if your organization has integrated build tools into Github pushes such as \",(0,n.jsx)(e.a,{href:\"https://circleci.com/\",children:\"CircleCI\"}),\". Keeping with today\\u2019s theme, lets do it in Python using the \",(0,n.jsx)(e.a,{href:\"https://gitpython.readthedocs.io/en/stable/\",children:\"GitPython Library\"}),\". \",(0,n.jsx)(e.em,{children:\"Note that Github credentials must be setup prior to using this code!\"})]}),(0,n.jsx)(e.pre,{className:\"language-python\",children:(0,n.jsxs)(e.code,{className:\"language-python code-highlight\",children:[(0,n.jsxs)(e.span,{className:\"code-line\",children:[(0,n.jsx)(e.span,{className:\"token keyword\",children:\"import\"}),` os\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[(0,n.jsx)(e.span,{className:\"token keyword\",children:\"from\"}),\" git \",(0,n.jsx)(e.span,{className:\"token keyword\",children:\"import\"}),` Repo\n`]}),(0,n.jsx)(e.span,{className:\"code-line\",children:`\n`}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[(0,n.jsx)(e.span,{className:\"token comment\",children:\"# gh.py\"}),`\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[(0,n.jsx)(e.span,{className:\"token comment\",children:\"# YOU MUST HAVE .git FILE CONFIGURED CORRECTLY\"}),`\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[(0,n.jsx)(e.span,{className:\"token builtin\",children:\"dir\"}),\" \",(0,n.jsx)(e.span,{className:\"token operator\",children:\"=\"}),\" os\",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\".\"}),\"getcwd\",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"(\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\")\"}),`\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"repo \",(0,n.jsx)(e.span,{className:\"token operator\",children:\"=\"}),\" Repo\",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"(\"}),(0,n.jsx)(e.span,{className:\"token builtin\",children:\"dir\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\")\"}),`\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"repo\",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\".\"}),\"git\",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\".\"}),\"add\",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"(\"}),\"update\",(0,n.jsx)(e.span,{className:\"token operator\",children:\"=\"}),(0,n.jsx)(e.span,{className:\"token boolean\",children:\"True\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\")\"}),`\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"repo\",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\".\"}),\"index\",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\".\"}),\"commit\",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"(\"}),(0,n.jsx)(e.span,{className:\"token string\",children:'\"update vargrid\"'}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\")\"}),`\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"origin \",(0,n.jsx)(e.span,{className:\"token operator\",children:\"=\"}),\" repo\",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\".\"}),\"remote\",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"(\"}),\"name\",(0,n.jsx)(e.span,{className:\"token operator\",children:\"=\"}),(0,n.jsx)(e.span,{className:\"token string\",children:\"'origin'\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\")\"}),`\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[\"origin\",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\".\"}),\"push\",(0,n.jsx)(e.span,{className:\"token punctuation\",children:\"(\"}),(0,n.jsx)(e.span,{className:\"token punctuation\",children:\")\"}),`\n`]})]})}),(0,n.jsx)(e.p,{children:\"So now I have a script that pulls the latest event and dimension data, builds it into a presentable file, and a script that automatically pushes that new file to Github to host it on a Github page. The last step is making it run every day.\"}),(0,n.jsxs)(e.p,{children:[\"I will do this as a \",(0,n.jsx)(e.a,{href:\"https://www.youtube.com/watch?v=v952m13p-b4\",children:\"cron job\"}),\" on a virtual linux machine from Linode. You could also do this as an AWS Lambda and trigger it daily with AWS EventBridge, but \",(0,n.jsx)(e.a,{href:\"https://docs.aws.amazon.com/lambda/latest/dg/python-package.html\",children:\"deploying Python environments with dependencies to AWS Lambda is kind of a pain\"}),\". Here are the steps:\"]}),(0,n.jsxs)(e.ul,{children:[(0,n.jsx)(e.li,{children:\"Create a virtual machine in Linode and install Git, Python, Virtualenv, etc\"}),(0,n.jsx)(e.li,{children:\"Clone my repo onto the virtual machine and navigate to the directory\"}),(0,n.jsx)(e.li,{children:\"Transfer my environment variables (API keys) to the virtual machine either by entering them directly or using a .env file\"}),(0,n.jsx)(e.li,{children:\"Create a virtualenv and install the dependencies from requirements.txt\"}),(0,n.jsx)(e.li,{children:\"Run app.py once to confirm it works\"}),(0,n.jsx)(e.li,{children:\"Run gh.py once to ensure it works\"}),(0,n.jsx)(e.li,{children:\"Navigate to my VM\\u2019s crontab file and add the following line to the end:\"})]}),(0,n.jsx)(e.pre,{className:\"language-bash\",children:(0,n.jsxs)(e.code,{className:\"code-highlight language-bash\",children:[(0,n.jsxs)(e.span,{className:\"code-line\",children:[(0,n.jsx)(e.span,{className:\"token comment\",children:\"# etc\"}),`\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[(0,n.jsx)(e.span,{className:\"token comment\",children:\"# etc\"}),`\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[(0,n.jsx)(e.span,{className:\"token comment\",children:\"# m h dom mon dow\"}),`\n`]}),(0,n.jsxs)(e.span,{className:\"code-line\",children:[(0,n.jsx)(e.span,{className:\"token number\",children:\"0\"}),\" \",(0,n.jsx)(e.span,{className:\"token number\",children:\"8\"}),\" * * * \",(0,n.jsx)(e.span,{className:\"token builtin class-name\",children:\"cd\"}),\" /adobevargrid \",(0,n.jsx)(e.span,{className:\"token operator\",children:\"&&\"}),\" \",(0,n.jsx)(e.span,{className:\"token builtin class-name\",children:\".\"}),\" venv/bin/activate \",(0,n.jsx)(e.span,{className:\"token operator\",children:\"&&\"}),\" python app.py \",(0,n.jsx)(e.span,{className:\"token operator\",children:\"&&\"}),` python gh.py\n`]})]})}),(0,n.jsx)(e.p,{children:\"Now every day at 8am my virtual machine will pull the latest metrics and events definitions directly from Adobe, build a new markdown page out of them, and automatically push that change to Github. When Github receives this change, it will transform that markdown into a viewable page via Github Pages.\"}),(0,n.jsx)(e.p,{children:\"See the an example of the final output here:\"}),(0,n.jsx)(e.p,{children:(0,n.jsx)(e.a,{href:\"https://johndavidsimmons.github.io/adobevargrid/adobevargrid\",children:\"https://johndavidsimmons.github.io/adobevargrid/adobevargrid\"})})]})}}var w=f;return b(v);})();\n;return Component;"
  },
  "_id": "blog/building-an-adobe-analytics-metrics-and-dimensions-definitions-page-with-the-adobe-analytics-api.mdx",
  "_raw": {
    "sourceFilePath": "blog/building-an-adobe-analytics-metrics-and-dimensions-definitions-page-with-the-adobe-analytics-api.mdx",
    "sourceFileName": "building-an-adobe-analytics-metrics-and-dimensions-definitions-page-with-the-adobe-analytics-api.mdx",
    "sourceFileDir": "blog",
    "contentType": "mdx",
    "flattenedPath": "blog/building-an-adobe-analytics-metrics-and-dimensions-definitions-page-with-the-adobe-analytics-api"
  },
  "type": "Blog",
  "readingTime": {
    "text": "11 min read",
    "minutes": 10.78,
    "time": 646800,
    "words": 2156
  },
  "slug": "building-an-adobe-analytics-metrics-and-dimensions-definitions-page-with-the-adobe-analytics-api",
  "toc": [
    {
      "value": "Preamble",
      "url": "#preamble",
      "depth": 2
    },
    {
      "value": "The beginning of the end…",
      "url": "#the-beginning-of-the-end",
      "depth": 2
    },
    {
      "value": "Authenticating",
      "url": "#authenticating",
      "depth": 2
    },
    {
      "value": "Gathering Data",
      "url": "#gathering-data",
      "depth": 2
    },
    {
      "value": "Building Markdown",
      "url": "#building-markdown",
      "depth": 2
    },
    {
      "value": "Style & Search",
      "url": "#style--search",
      "depth": 2
    },
    {
      "value": "Saving the string as a file",
      "url": "#saving-the-string-as-a-file",
      "depth": 2
    },
    {
      "value": "Automation",
      "url": "#automation",
      "depth": 2
    }
  ]
}